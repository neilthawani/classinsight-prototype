{"version":3,"sources":["actions/types.js","fixtures/legend_labels.js","data/parser.js","utils/formatPercentage.js","utils/calculateLessonDuration.js","data/parser-collection.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","reducers/adminReducer.js","reducers/datasetReducer.js","store.js","utils/setAuthToken.js","actions/authActions.js","config/oauth.js","assets/images/classinsight-logo.png","components/layout/Navbar.js","actions/datasetActions.js","components/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/legend/HoverBox.js","components/legend/LegendItem.js","components/legend/LegendItemGroup.js","components/dashboard/TrendLinePoint.js","components/dashboard/TrendLine.js","components/dashboard/TrendChartAxis.js","components/dashboard/TrendChart.js","utils/flattenArray.js","components/dashboard/TrendChartContainer.js","utils/removePropertyFromObject.js","utils/formatDate.js","utils/removeArrayValue.js","components/dashboard/Dashboard.js","components/visualization/talk-ratio/TalkRatioSection.js","components/visualization/turn-taking/defineInitialStyle.js","components/visualization/transcript/Utterance.js","components/visualization/transcript/Script.js","components/visualization/talk-ratio/TalkRatio.js","components/legend/LegendButton.js","components/legend/LegendButtonGroup.js","components/visualization/turn-taking/drawBarStyles.js","components/visualization/turn-taking/TurnTakingSmall.js","components/visualization/transcript/Transcript.js","components/visualization/transcript/Turn.js","components/visualization/turn-taking/Bar.js","utils/isObjectEmpty.js","components/visualization/turn-taking/TurnTaking.js","fixtures/dashboardRoutes.js","components/layout/ButtonSelector.js","components/layout/SidebarGroup.js","components/layout/Sidebar.js","components/layout/DashboardMenus.js","components/visualization/AdminViz.js","components/visualization/UserViz.js","fixtures/user_types.js","components/admin/AdminPanelTableRow.js","actions/adminActions.js","fixtures/adjectives.js","fixtures/nouns.js","components/admin/CreateUserForm.js","utils/generateRandomNumber.js","components/admin/AdminPanel.js","components/admin/UploadDataForm.js","components/admin/UserDatasetTableRow.js","components/admin/ResetPasswordForm.js","components/admin/UserDetailsPage.js","components/App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","USER_LOADING","SET_CURRENT_USER","LIST_USERS","CREATE_USER","CLEAR_IS_VALID_USER","DELETE_USER","EDIT_USER","SHOW_USER","RESET_PASSWORD","LIST_DATASETS","UPLOAD_DATASET","DELETE_DATASET","EDIT_DATASET","SHOW_DATASET","CLEAR_VALID_STATE","legendLabels","type","value","text","barColor","speakerType","textColor","description","Parser","data","options","this","talkRatios","filter","item","transcript","utteranceIndex","segments","forEach","segment","index","array","participation_type","speaking_turns","speakingTurn","jindex","jarray","push","speakerPseudonym","speaker_pseudonym","speaker_type","initialTime","initial_time","endTime","end_time","utterances","utterance","kindex","karray","unclassifiedStudentTalk","utterance_type","length","includes","unclassifiedTeacherTalk","videoTeacherTalk","dataRow","id","timestamp","speakerUtterances","nTokens","n_tokens","utteranceTypes","filteredTranscript","activeFilters","reduce","accumulator","turn","newUtterances","jaccumulator","some","drilldownTranscript","drilldownFilter","expandedData","concat","maxNTokens","Math","max","apply","map","collapsedData","sameUtteranceTypesAsPrevious","previousDataRow","JSON","stringify","parsedData","nTokensPerUtteranceType","LegendLabels","labelObj","percentage","speakerTotals","initializeSpeakerTotals","totalObj","totalNTokens","ratioObj","nTokenValue","allSpeakersTotalNTokens","teacherTalkRatios","reverse","studentTalkRatios","accumObj","speakerTalkTotals","speakerTotalObj","talkRatioObj","hasOwnProperty","totalTalkPercentage","parse","jsonData","topic","classTopic","period","classPeriod","date","classDate","isActive","formatPercentage","decimalValue","precision","showValuesLessThanOne","appendPercentSign","formattedValue","parseFloat","toFixed","calculateLessonDuration","timeInSecs","Date","toISOString","substr","ParserCollection","dataParsers","trendLineDataObj","prev","parser","existingLabelObj","dateArray","Object","keys","allTrendLines","dateLabelArray","trendLineDataArray","percentageValue","formattedPercentageValue","percentageLabel","trendLineDatum","labelObjDatum","datum","Teacher","legendLabelObj","Student","teacherData","aggregatedParserRatios","end","dateRange","start","averageDurationInSecs","duration","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","admin","state","action","isValidUser","passwordResetSuccessful","payload","users","_id","userData","errors","datasets","activeIndex","parseInt","localStorage","getItem","sortedPayload","sort","a","b","splitA","split","splitB","dataset","assign","parserCollection","activeDataRowIndex","activeDataset","activeParser","isValid","auth","middleware","thunk","promiseMiddleware","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","removeItem","oauth","clientId","clientSecret","Navbar","onLogoutClick","e","preventDefault","props","res","isAdmin","userType","isLoggedIn","className","to","pathname","src","ClassInSightLogo","alt","height","path","mdiAccount","size","name","mdiChevronDown","mdiBadgeAccountHorizontalOutline","isGoogleUser","mdiLogout","render","renderProps","onClick","disabled","buttonText","onLogoutSuccess","onGoogleLogoutSuccess","bind","Component","connect","showDataset","datasetIndex","listDatasets","userId","get","params","then","response","ret","catch","error","Landing","history","withRouter","Register","onChange","setState","target","onSubmit","newUser","email","password","password2","registerUser","noValidate","htmlFor","autoComplete","classnames","invalid","nextProps","post","err","Login","loginUser","loginWithGoogle","emailnotfound","passwordincorrect","theme","onSuccess","onGoogleSuccess","onFailure","onGoogleFailure","cookiePolicy","isSignedIn","setItem","jwt_decode","googleResponse","component","rest","HoverBox","width","display","activeLabel","label","handleClick","style","styles","LegendItem","backgroundColor","color","displayRatio","onMouseOver","toggleDefinitionDisplay","onMouseOut","LegendItemGroup","labels","TrendLinePoint","point","handleCircleTooltip","xScale","yScale","r","fill","cx","cy","score","TrendLine","tooltip","trendLine","d","stroke","TrendChartAxis","ref","React","createRef","current","d3","attr","transform","call","axis","transition","TrendChart","scales","x","y","svgWidth","svgHeight","axes","yAxis","scale","ticks","tick","x1","margin","left","y1","x2","right","y2","trendLineData","circleTooltip","top","transforms","xAxis","flattenArray","arr","TrendChartContainer","parseTime","parseData","uuid","bottom","isLoaded","domain","min","ceil","row","document","getElementById","clientWidth","clientHeight","xRange","range","yRange","domainData","calculateXScale","calculateYScale","tickFormat","xAxisTransform","yAxisTransform","metaData","object","propKey","newRow","formatDate","dateToParse","dateObj","year","month","format","removeArrayValue","indexOf","splice","Dashboard","averageDuration","handleFilterClick","TalkRatioSection","handleTalkRatioSectionClick","formatStyle","defineInitialStyle","legendLabelValue","matchingLegendObj","find","barBorder","boxSizing","borderValue","border","Utterance","utteranceId","handleUtteranceClick","timeStamp","activeLabels","isLineHighlighted","i","data-attr-utterance-id","utteranceItem","utteranceArray","canInspect","Script","url","location","href","slice","setTimeout","focusId","buffer","getElementsByClassName","getBoundingClientRect","scrollTo","behavior","addEventListener","handleScroll","removeEventListener","scriptTurnContainer","elementsInBounds","el","elBounds","isElInBounds","innerWidth","documentElement","innerHeight","topElId","bottomElId","getAttribute","event","getElementIdsForFocusWindow","activeTranscript","hasTimestamp","key","TalkRatio","slashTurnTaking","lastIndexOf","newPathname","replace","calculateSpeakerTotal","LegendButton","LegendButtonGroup","isCollapsed","toggleGroup","mdiChevronUp","drawBarStyles","areBarsSmall","isStudentData","isTeacherData","initialStyle","barWidth","barHeight","baseStyle","extendedStyle","teacherStyle","studentStyle","TurnTakingSmall","chartData","expanded","chartWidth","focusBox","boxHeight","boxOffset","minWidth","Transcript","turnTakingBarsSmall","topOfBox","querySelectorAll","bottomOfBox","topOfBoxY","marginLeft","HoverScript","turnId","handleTextClick","Bar","hoveredTurn","activeTurn","Boolean","turnObj","handleBarClick","handleMouseOver","handleMouseOut","TurnTaking","toggleExpandedBars","context","barsStateIcon","mdiArrowCollapseVertical","mdiArrowExpandVertical","bars","definitions","routePrefix","buttonValue","icon","mdiViewDashboardVariantOutline","mdiBarcode","mdiChartGantt","mdiCommentTextMultipleOutline","paths","routeObj","dashboardRoutes","ButtonSelector","nextState","buttonSelectorSelectedOption","definitionObj","data-attr-name","SidebarGroup","linkTo","match","exact","hideActive","handleSidebarRowCourseClick","join","Sidebar","isDashboard","sidebarSelectedCourse","DashboardMenus","handleButtonSelectorClick","AdminViz","areDatasetsLoaded","UserViz","userTypes","AdminPanelTableRow","isEditingUser","UserTypes","obj","confirmation","deleteUser","editUser","toggleEditingUser","isCurrentUser","isDeletingUser","userTypeAsWords","console","log","adjectives","nouns","CreateUserForm","createUser","emailCopied","adjective","Adjectives","floor","random","noun","Nouns","number","username","navigator","clipboard","writeText","mdiGooglePlus","title","generateGmailUsername","rel","prevState","AdminPanel","isCreatingUser","userToDelete","fetchUsers","toggleCreateUser","clearIsValidUser","deleteUserById","entries","UploadDataForm","fileData","parseFile","evt","reader","FileReader","readAsText","files","isUploaded","onload","result","fileName","fileMetadata","filename","uploadDataset","dismountForm","accept","isJsonDataExpanded","deleteDataset","newDataset","editDataset","isDeletingDataset","parsedJson","expandJsonData","toggleActive","colSpan","ResetPasswordForm","resetUserPassword","message","UserDetailsPage","isUploadingData","isResettingPassword","datasetToDelete","showMessage","showUserDetails","deleteDatasetById","that","clearValidState","toggleUploadData","toggleResetPassword","UserDatasetTableRow","isDeleted","App","hostname","jwtToken","currentTime","now","exp","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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CA,cACA,YACA,WACA,UACA,UACA,UACA,YACA,aACA,OACA,MACA,QACA,OACA,SACA,SACA,SACA,QACA,SACA,OACA,QACA,WACA,QACA,WACA,QACA,YACA,eACA,QACA,UACA,OACA,OACA,UACA,UACA,SACA,WACA,WACA,QACA,WACA,QACA,SACA,OACA,WACA,cACA,YACA,WACA,UACA,UACA,QACA,YACA,OACA,YACA,OACA,WACA,YACA,aACA,YACA,MACA,QACA,QACA,SACA,OACA,UACA,WACA,SACA,YACA,UACA,QACA,WACA,YACA,UACA,QACA,cACA,eACA,YACA,WACA,YACA,WACA,OACA,WACA,SACA,QACA,YACA,OACA,WACA,WACA,QACA,SACA,YACA,WACA,WACA,WACA,WACA,QACA,QACA,WACA,QACA,UACA,QACA,UACA,YACA,aACA,WACA,SACA,YACA,YACA,aACA,cACA,SACA,UACA,QACA,OACA,QACA,QACA,QACA,WACA,SACA,SACA,OACA,SACA,QACA,UACA,UACA,QACA,SACA,SACA,UACA,MACA,WACA,OACA,SACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,MACA,aACA,cACA,OACA,QACA,YACA,UACA,QACA,QACA,WACA,QACA,MACA,QACA,UACA,WACA,SACA,aACA,QACA,WACA,OACA,WACA,UACA,WACA,WACA,WACA,QACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,cACA,WACA,cACA,cACA,aACA,SACA,aACA,OACA,OACA,OACA,QACA,YACA,WCtBWC,GA5KH,CACR,QACA,OACA,WACA,gBACA,QACA,SACA,YACA,SACA,SACA,UACA,SACA,QACA,YACA,OACA,SACA,SACA,YACA,QACA,SACA,aACA,SACA,QACA,SACA,UACA,OACA,UACA,WACA,YACA,QACA,SACA,UACA,QACA,QACA,SACA,WACA,QACA,UACA,QACA,OACA,QACA,WACA,UACA,QACA,MACA,WACA,MACA,SACA,eACA,UACA,YACA,aACA,MACA,OACA,QACA,SACA,SACA,SACA,YACA,SACA,OACA,QACA,OACA,SACA,SACA,SACA,WACA,MACA,QACA,SACA,UACA,WACA,UACA,SACA,OACA,UACA,UACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,UACA,YACA,UACA,OACA,aACA,SACA,SACA,OACA,UACA,OACA,WACA,SACA,SACA,SACA,MACA,QACA,aACA,QACA,UACA,UACA,QACA,WACA,QACA,QACA,MACA,SACA,WACA,QACA,QACA,MACA,WACA,aACA,OACA,SACA,YACA,SACA,UACA,UACA,aACA,OACA,UACA,OACA,QACA,MACA,SACA,SACA,SACA,OACA,OACA,YACA,OACA,QACA,OACA,QACA,MACA,SACA,WACA,QACA,WACA,QACA,MACA,SACA,MACA,SACA,WACA,SACA,MACA,SACA,SACA,YACA,SACA,QACA,UC5JJ,IAEMC,G,kDACF,WAAYrV,GAAQ,IAAD,8BACf,cAAMA,IAuBV6C,SAAW,SAAA/C,GACP,EAAKgD,SAAS,CAAE,CAAChD,EAAEiD,OAAOnN,IAAKkK,EAAEiD,OAAO/P,SAzBzB,EA4BnBgQ,SAAW,SAAAlD,GACPA,EAAEC,iBAEF,IAAMkD,EAAU,CACZlC,KAAM,EAAKxE,MAAMwE,KACjBmC,MAAO,EAAK3G,MAAM2G,MAClB/C,SAAU,EAAK5D,MAAM4D,SACrBgD,SAAU,EAAK5G,MAAM4G,SACrBC,UAAW,EAAK7G,MAAM6G,WAG1B,EAAKpD,MAAMsV,WAAWrS,IApCtB,EAAK1G,MAAQ,CACTwE,KAAM,GACNmC,MAAO,GACP/C,SAAU,GACVgD,SAAU,GACVC,UAAW,GACXrG,OAAQ,GACRwY,aAAa,GAVF,E,oEA2Cf,IC3DqC7L,EAAK1S,ED2DtCwe,EAAYC,GAAW1e,KAAK2e,MAAM3e,KAAK4e,SAAWF,GAAWlgB,SAC7DqgB,EAAOC,GAAM9e,KAAK2e,MAAM3e,KAAK4e,SAAWE,GAAMtgB,SAC9CugB,GC7DiCpM,ED6DH,IC7DQ1S,ED6DH,IC5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","file":"static/js/main.187f05e0.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\n\n// authActions\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n// adminActions\nexport const LIST_USERS = \"LIST_USERS\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const CLEAR_IS_VALID_USER = \"CLEAR_IS_VALID_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const SHOW_USER = \"SHOW_USER\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\n// datasetActions\nexport const LIST_DATASETS = \"LIST_DATASETS\";\nexport const UPLOAD_DATASET = \"UPLOAD_DATASET\";\nexport const DELETE_DATASET = \"DELETE_DATASET\";\nexport const EDIT_DATASET = \"EDIT_DATASET\";\nexport const SHOW_DATASET = \"SHOW_DATASET\";\nexport const CLEAR_VALID_STATE = \"CLEAR_VALID_STATE\";\n","var legendLabels = [{\n    type: \"Teacher\",\n    value: \"Metacognitive Modeling Questions\",\n    text: \"Metacognitive\",\n    barColor: \"#10273d\",\n    speakerType: \"Teacher\",\n    textColor: \"white\",\n    description: \"Teacher models for students how they should think through a problem using questioning that is not responded to by students.\"\n}, {\n    type: \"Teacher\",\n    value: \"Teacher Explanation + Evidence\",\n    text: \"Explanation + Evidence\",\n    barColor: \"#204e79\",\n    speakerType: \"Teacher\",\n    textColor: \"white\",\n    description: \"Teacher models making connections to evidence. Like a student explanation + evidence code, teacher offers a modeled statement/example that includes reasoning grounded in a form of evidence. This might be anecdotal (an observation), scientific (pointing to the results of an experiment), a link to a resource previously reviewed in the class, etc.\"\n}, {\n    type: \"Teacher\",\n    value: \"Teacher Open-Ended S/Q\",\n    text: \"Open-Ended Questions\",\n    barColor: \"#3075b5\",\n    speakerType: \"Teacher\",\n    textColor: \"white\",\n    description: \"Teacher asks students to respond in a way that offers a range of possibilities for responding. These questions or statements work to solicit extended responses that make connections.\"\n}, {\n    type: \"Teacher\",\n    value: \"Teacher Close-Ended S/Q\",\n    text: \"Close-Ended Questions\",\n    barColor: \"#5e9bd4\",\n    speakerType: \"Teacher\",\n    textColor: \"black\",\n    description: \"Teacher asks students to respond in a way that provides limited possibilities for response (yes/no, known answer, fill in the blank). These questions are calls for recitation (correct answer) or calls for connection to previously taught content.\"\n}, {\n    type: \"Teacher\",\n    value: \"Assorted Teacher Talk\",\n    text: \"Other Talk\",\n    barColor: \"#d7e6f4\",\n    speakerType: \"Teacher\",\n    textColor: \"black\"\n}, {\n    type: \"Student\",\n    value: \"Student Explanation + Evidence\",\n    text: \"Explanation + Evidence\",\n    barColor: \"#562810\",\n    speakerType: \"Student\",\n    textColor: \"white\",\n    description: \"Students offer an open-ended response that includes reasoning grounded in a form of evidence. This might be anecdotal (an observation), scientific (pointing to the results of an experiment), a link to a resource previously reviewed in the class, etc.\"\n}, {\n    type: \"Student\",\n    value: \"Student Open-Ended S/Q\",\n    text: \"Open-Ended Questions\",\n    barColor: \"#97471c\",\n    speakerType: \"Student\",\n    textColor: \"white\"\n}, {\n    type: \"Student\",\n    value: \"Student Open-Ended Response\",\n    text: \"Open-Ended Response\",\n    barColor: \"#d76528\",\n    speakerType: \"Student\",\n    textColor: \"white\",\n    description: \"Students provide elaborated responses that move beyond what has been covered previously in the class/\\\"correct answer\\\" recitation.\"\n}, {\n    type: \"Student\",\n    value: \"Student Close-Ended S/Q\",\n    text: \"Close-Ended Questions\",\n    barColor: \"#e39368\",\n    speakerType: \"Student\",\n    textColor: \"black\"\n}, {\n    type: \"Student\",\n    value: \"Student Close-Ended Response\",\n    text: \"Close-Ended Response\",\n    barColor: \"#efc1a9\",\n    speakerType: \"Student\",\n    textColor: \"black\",\n    description: \"Students respond with yes/no or known answer response.\"\n}, {\n    type: \"Student\",\n    value: \"Assorted Student Talk\",\n    text: \"Other Talk\",\n    barColor: \"#fbf0e9\",\n    speakerType: \"Student\",\n    textColor: \"black\"\n}, {\n    type: \"Technique\",\n    value: \"Turn-Taking Facilitation\",\n    text: \"Turn-Taking Facilitation\",\n    barColor: \"#daacec\",\n    speakerType: \"Teacher\",\n    textColor: \"black\",\n    description: \"Teacher directs a question to a specific student.\"\n}, {\n    type: \"Technique\",\n    value: \"Re-Voicing\",\n    text: \"Re-Voicing\",\n    barColor: \"#a22fd0\",\n    speakerType: \"Teacher\",\n    textColor: \"white\",\n    description: \"Teacher restates/summarizes/rephrases/elaborates on a student response.\"\n}, {\n    type: \"Technique\",\n    value: \"Behavior Management Questions\",\n    text: \"Behavior Management\",\n    barColor: \"#411353\",\n    speakerType: \"Teacher\",\n    textColor: \"white\",\n    description: \"This code is applied when a teacher asks a question that is managing behavior and/or task completion.\"\n}, {\n    type: \"Teacher\",\n    value: \"Video\",\n    text: \"Video\",\n    barColor: \"#29CB97\",\n    speakerType: \"Teacher\",\n    textColor: \"black\",\n    description: \"\"\n}];\n\nexport default legendLabels;\n","import LegendLabels from '../fixtures/legend_labels';\n\nexport default class Parser {\n    constructor(data) {\n        var parsedData = {};\n\n        parsedData = JSON.parse(data.jsonData);\n        this.topic = data.classTopic;\n        this.period = data.classPeriod;\n        this.date = data.classDate;\n        this.data = parsedData;\n        this.segments = parsedData.segments;\n        this.isActive = false;\n    }\n\n    legendLabels = function(options) {\n        var legendLabels = this.talkRatios().filter((item) => item.type === options.type);\n        return legendLabels;\n    }\n\n    transcript = function() {\n        var transcript = [];\n        var utteranceIndex = 0;\n\n        this.segments.forEach((segment, index, array) => {\n            if (segment.participation_type !== \"Other\") {\n                var speakingTurns = segment.speaking_turns;\n\n                speakingTurns.forEach((speakingTurn, jindex, jarray) => {\n                    transcript.push({\n                        speakerPseudonym: speakingTurn.speaker_pseudonym,\n                        speakerType: speakingTurn.speaker_type,\n                        initialTime: speakingTurn.initial_time,\n                        endTime: speakingTurn.end_time,\n                        utterances: []\n                    });\n\n                    speakingTurn.utterances.forEach((utterance, kindex, karray) => {\n                        var unclassifiedStudentTalk = utterance.utterance_type.length === 0 &&\n                                (speakingTurn.speaker_pseudonym.includes(\"Class\") ||\n                                speakingTurn.speaker_pseudonym.includes(\"Student\")),\n                            unclassifiedTeacherTalk = utterance.utterance_type.length === 0 &&\n                                !speakingTurn.speaker_pseudonym.includes(\"Student\") && !speakingTurn.speaker_pseudonym.includes(\"Class\") && !speakingTurn.speaker_pseudonym.includes(\"Video\"),\n                            videoTeacherTalk = speakingTurn.speaker_pseudonym.includes(\"Video\"),\n                            speakerPseudonym = speakingTurn.speaker_pseudonym.includes(\"Video\") ? \"Teacher (Video)\" : speakingTurn.speaker_pseudonym,\n                            dataRow = {\n                                id: utteranceIndex++,\n                                timestamp: [],\n                                speakerPseudonym: speakerPseudonym,\n                                speakerUtterances: [utterance.utterance],\n                                nTokens: utterance.n_tokens\n                            };\n\n                        if (utterance.timestamp.length) {\n                            dataRow.timestamp.push(utterance.timestamp);\n                        }\n\n                        if (unclassifiedStudentTalk) {\n                            dataRow = { ...dataRow, ...{ utteranceTypes: [\"Assorted Student Talk\"] } };\n                        } else if (unclassifiedTeacherTalk) {\n                            dataRow = { ...dataRow, ...{ utteranceTypes: [\"Assorted Teacher Talk\"] } };\n                        } else if (videoTeacherTalk) {\n                            dataRow = { ...dataRow, ...{ utteranceTypes: [\"Video\"] } };\n                        } else {\n                            dataRow = { ...dataRow, ...{ utteranceTypes: utterance.utterance_type } };\n                        }\n\n                        transcript[transcript.length - 1].utterances.push(dataRow);\n                    });\n                });\n            }\n        });\n\n        return transcript;\n    }\n\n    filteredTranscript = function(options) {\n        var data = this.transcript();\n        var activeFilters = options && options.activeFilters;\n\n        var filteredTranscript = data.reduce((accumulator, turn, index, array) => {\n            var newUtterances = turn.utterances.reduce((jaccumulator, utterance, jindex, jarray) => {\n                var shouldBeFiltered = activeFilters && activeFilters.some(filter => utterance.utteranceTypes.includes(filter));\n\n                if (!shouldBeFiltered) {\n                    jaccumulator.push(utterance);\n                }\n\n                return jaccumulator;\n            }, []);\n\n            if (newUtterances.length) {\n                turn.utterances = newUtterances;\n                accumulator.push(turn);\n            }\n\n            return accumulator;\n        }, []);\n\n        return filteredTranscript;\n    }\n\n    // used in TalkRatio to accumulate utterance types, divided by turn\n    drilldownTranscript = function(options) {\n        var data = this.transcript(),\n            drilldownFilter = options && options.drilldownFilter;\n\n        var drilldownTranscript = data.reduce((accumulator, turn, index, array) => {\n            var newUtterances = turn.utterances.reduce((jaccumulator, utterance, jindex, jarray) => {\n                if (utterance.utteranceTypes.includes(drilldownFilter)) {\n                    jaccumulator.push(utterance);\n                }\n\n                return jaccumulator;\n            }, []);\n\n            if (newUtterances.length) {\n                turn.utterances = newUtterances;\n                accumulator.push(turn);\n            }\n\n            return accumulator;\n        }, []);\n\n        return drilldownTranscript;\n    }\n\n    // used in TurnTaking but only called here\n    expandedData = function(options) {\n        var activeFilters = options && options.activeFilters;\n\n        var transcript = this.filteredTranscript({ activeFilters: activeFilters });\n\n        return transcript.reduce((accumulator, turn, index, array) => {\n            return accumulator.concat(turn.utterances);\n        }, []);\n    }\n\n    maxNTokens = function(options) {\n        var activeFilters = options && options.activeFilters;\n\n        var expandedData = this.expandedData({ activeFilters: activeFilters });\n\n        return Math.max.apply(Math, expandedData.map((utterance) => utterance.nTokens));\n    }\n    collapsedData = function(options) {\n        var activeFilters = options && options.activeFilters;\n        var expandedData = this.expandedData({ activeFilters: activeFilters }),\n            collapsedData = [];\n\n        expandedData.forEach((utterance, index, array) => {\n            var dataRow = { ...utterance },\n                sameUtteranceTypesAsPrevious = false,\n                previousDataRow = {};\n\n            if (collapsedData.length > 0) {\n                previousDataRow = { ...collapsedData[collapsedData.length - 1] };\n                sameUtteranceTypesAsPrevious = JSON.stringify(previousDataRow.utteranceTypes) === JSON.stringify(dataRow.utteranceTypes);\n            }\n\n            if (sameUtteranceTypesAsPrevious) {\n                collapsedData[collapsedData.length - 1].nTokens = previousDataRow.nTokens + dataRow.nTokens;\n                collapsedData[collapsedData.length - 1].timestamp.push(...dataRow.timestamp);\n                collapsedData[collapsedData.length - 1].speakerUtterances.push(...dataRow.speakerUtterances);\n            }\n\n            if (collapsedData.length === 0 || (collapsedData.length > 0 && !sameUtteranceTypesAsPrevious)) {\n                collapsedData.push(dataRow);\n            }\n        });\n\n        return collapsedData;\n    }\n\n    parsedData = function(options) {\n        var activeFilters = options && options.activeFilters;\n        var expandedData = this.expandedData({ activeFilters: activeFilters }),\n            collapsedData = this.collapsedData({ activeFilters: activeFilters });\n\n        var parsedData = {\n            \"expanded\": expandedData,\n            \"collapsed\": collapsedData\n        };\n\n        return parsedData;\n    }\n\n    nTokensPerUtteranceType = function() {\n        var expandedData = this.expandedData(), // get array of every utterance in the transcript\n            legendLabels = LegendLabels,\n            talkRatios = legendLabels.map((labelObj, index, array) => { // set up object to be returned\n                return {\n                    ...labelObj,\n                    ...{ nTokens: 0, percentage: 0 }\n                };\n            });\n\n        // calculate nTokens for each utterance type\n        talkRatios.forEach((labelObj, index, array) => {\n            expandedData.forEach((utterance, index, array) => {\n                if (utterance.utteranceTypes.includes(labelObj.value)) {\n                    labelObj.nTokens += utterance.nTokens;\n                }\n            });\n        });\n\n        return talkRatios;\n    }\n\n    talkRatios = function() {\n        var nTokensPerUtteranceType = this.nTokensPerUtteranceType(),\n            speakerTotals = this.initializeSpeakerTotals();\n\n        // populate the initialized speakerTotals object\n        // by calculating totalNTokens for each speakerType\n        speakerTotals.forEach((totalObj, index, array) => {\n            totalObj.totalNTokens = nTokensPerUtteranceType\n                                .filter((ratioObj) => ratioObj.speakerType === totalObj.speakerType)\n                                .map((ratioObj) => ratioObj.nTokens)\n                                .reduce((accumulator, nTokenValue, index, array) => {\n                                    accumulator += nTokenValue;\n                                    return accumulator;\n                                }, 0);\n        });\n\n        // calculate the talk ratio percentage for each utterance type\n        var allSpeakersTotalNTokens = speakerTotals\n                                      .reduce((accumulator, item) => accumulator += item.totalNTokens, 0);\n\n        nTokensPerUtteranceType.forEach((ratioObj, index, array) => {\n            ratioObj.percentage = ratioObj.nTokens / allSpeakersTotalNTokens;\n        });\n\n        return nTokensPerUtteranceType;\n    }\n\n    teacherTalkRatios = function() {\n        var talkRatios = this.talkRatios(),\n            teacherTalkRatios = talkRatios.filter((item) => item.type === \"Teacher\").reverse();\n\n        return teacherTalkRatios;\n    }\n\n    studentTalkRatios = function() {\n        var talkRatios = this.talkRatios(),\n            studentTalkRatios = talkRatios.filter((item) => item.type === \"Student\");\n\n        return studentTalkRatios;\n    }\n\n    // only called in this file by speakerTalkTotals\n    initializeSpeakerTotals = function() {\n        var legendLabels = LegendLabels;\n        var speakerTotals = legendLabels.reduce((accumulator, labelObj, index, array) => {\n            var speakerIsInArray = accumulator.filter((accumObj) => {\n                return accumObj.speakerType === labelObj.speakerType;\n            });\n\n            if (speakerIsInArray.length === 0) {\n                accumulator.push({\n                    speakerType: labelObj.speakerType,\n                    totalNTokens: 0\n                });\n            }\n\n            return accumulator;\n        }, []);\n\n        return speakerTotals;\n    }\n\n    // headings on TalkRatio: Teacher Talk (%), Student Talk (%)\n    speakerTalkTotals = function() {\n        var speakerTotals = this.initializeSpeakerTotals(),\n            talkRatios = this.talkRatios();\n\n        speakerTotals.forEach((speakerTotalObj, index, array) => {\n            talkRatios.forEach((talkRatioObj, jindex, jarray) => {\n                if (speakerTotalObj.speakerType === talkRatioObj.speakerType) {\n                    if (!speakerTotalObj.hasOwnProperty(\"totalTalkPercentage\")) {\n                        speakerTotalObj.totalTalkPercentage = 0;\n                    }\n\n                    speakerTotalObj[\"totalTalkPercentage\"] += talkRatioObj.percentage;\n                }\n\n            });\n        });\n\n        return speakerTotals;\n    }\n}\n","export default function formatPercentage(decimalValue, precision, showValuesLessThanOne = true, appendPercentSign = true) {\n     // * 1 is a hacky way to convert string to number\n     var formattedValue = parseFloat(100 * decimalValue).toFixed(precision) * 1;\n\n    if (appendPercentSign) {\n        formattedValue += '%';\n    }\n\n    if (showValuesLessThanOne && decimalValue > 0 && decimalValue < 0.01 && precision === 0) {\n        formattedValue = `<1${appendPercentSign ? '%' : ''}`\n    }\n\n    return formattedValue;\n}\n","var calculateLessonDuration = function(timeInSecs) {\n    return new Date(timeInSecs * 1000).toISOString().substr(11, 8);\n}\n\nexport default calculateLessonDuration;\n","import LegendLabels from '../fixtures/legend_labels';\nimport formatPercentage from '../utils/formatPercentage';\nimport calculateLessonDuration from '../utils/calculateLessonDuration';\n\nexport default class ParserCollection {\n    constructor(dataParsers) {\n        this.dataParsers = dataParsers;\n    }\n\n    // used for Dashboard trend lines\n    aggregatedParserRatios() {\n        var dataParsers = this.dataParsers,\n            // trendLineDataObj is of the format: { date: labelObj, date: labelObj, etc. }\n            trendLineDataObj = dataParsers.reduce((prev, parser, index, array) => {\n                var labelObj = parser.nTokensPerUtteranceType();\n\n                // if there is only one data row from a date\n                if (!prev.hasOwnProperty(parser.date)) {\n                    prev[parser.date] = labelObj;\n                } else { // otherwise if there are multiple data rows with the same date\n                    var existingData = prev[parser.date];\n\n                    existingData.forEach((existingLabelObj, index) => {\n                        existingLabelObj.nTokens += labelObj[index].nTokens;\n                    });\n                }\n\n                return prev;\n            }, {});\n\n        // dateArray is array of all dates\n        var dateArray = Object.keys(trendLineDataObj);\n\n        // allTrendLines is array of labelObj's with an empty data array appended to each obj\n        var allTrendLines = LegendLabels.map((labelObj) => {\n            return {\n                ...labelObj,\n                data: []\n            };\n        });\n\n        dateArray.forEach((date, index, array) => {\n            var dateLabelArray = trendLineDataObj[date];\n\n            var totalNTokens = dateLabelArray.reduce((prev, labelObj) => {\n                prev += labelObj.nTokens;\n                return prev;\n            }, 0);\n\n            var trendLineDataArray = dateLabelArray.map((labelObj) => {\n                return {\n                    ...labelObj,\n                    date: date,\n                    percentageValue: labelObj.nTokens / totalNTokens,\n                    formattedPercentageValue: formatPercentage(labelObj.nTokens / totalNTokens, 2, true, false),\n                    percentageLabel: formatPercentage(labelObj.nTokens / totalNTokens, 0)\n                };\n            });\n\n            allTrendLines.forEach((trendLineDatum) => {\n                var labelObjDatum = trendLineDataArray.filter((datum) => datum.value === trendLineDatum.value)[0];\n\n                trendLineDatum.data.push({\n                    date: labelObjDatum.date,\n                    nTokens: labelObjDatum.nTokens,\n                    percentageValue: labelObjDatum.percentageValue,\n                    formattedPercentageValue: labelObjDatum.formattedPercentageValue,\n                    percentageLabel: labelObjDatum.percentageLabel\n                });\n            });\n        });\n\n        return {\n            Teacher: allTrendLines.filter((legendLabelObj => legendLabelObj.type === \"Teacher\")),\n            Student: allTrendLines.filter((legendLabelObj => legendLabelObj.type === \"Student\"))\n        };\n    }\n\n    dateRange() {\n        var teacherData = this.aggregatedParserRatios()[\"Teacher\"];\n\n        // Developer's note: Sidebar classes display in descending order by default.\n        // See datasetReducer::LIST_DATASETS::sortedPayload\n        var end = teacherData[0].data[0].date;\n        var start = teacherData[0].data[teacherData[0].data.length - 1].date;\n\n        var dateRange = {\n            start: start,\n            end: end\n        };\n\n        return dateRange;\n    }\n\n    // average lesson duration\n    averageDuration() {\n        var dataParsers = this.dataParsers,\n            averageDurationInSecs = dataParsers.reduce((prev, parser) => {\n                prev += parser.data.duration;\n                return prev;\n            }, 0) / dataParsers.length;\n\n        return calculateLessonDuration(averageDurationInSecs);\n    }\n\n    // aggregated legend labels\n    // options.type is either Teacher or Student\n    legendLabels = function(options) {\n        var legendLabels = LegendLabels.filter((item) => item.type === options.type);\n\n        return legendLabels;\n    }\n}\n","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function errorReducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport adminReducer from './adminReducer';\nimport datasetReducer from './datasetReducer';\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n    admin: adminReducer,\n    datasets: datasetReducer,\n    auth: authReducer,\n    errors: errorReducer\n});\n","import {\n    GET_ERRORS,\n    LIST_USERS,\n    CLEAR_IS_VALID_USER,\n    EDIT_USER,\n    CREATE_USER,\n    DELETE_USER,\n    SHOW_USER,\n    RESET_PASSWORD\n} from '../actions/types';\n\nexport default function adminReducer(state, action) {\n    switch (action.type) {\n        case CLEAR_IS_VALID_USER:\n            return {\n                ...state,\n                isValidUser: null\n            }\n        case RESET_PASSWORD:\n            return {\n                ...state,\n                passwordResetSuccessful: action.payload.passwordResetSuccessful\n            };\n        case LIST_USERS:\n            return {\n                ...state,\n                users: action.payload.data\n            };\n        case EDIT_USER:\n            return {\n                users:\n                    state.users.map((user) => {\n                        if (user._id === action.payload.userData.user._id) {\n                            return action.payload.userData.user;\n                        }\n                        return user;\n                    })\n            };\n        case CREATE_USER:\n            return {\n                isValidUser: true,\n                users: [action.payload.user, ...state.users]\n            };\n        case DELETE_USER:\n            return {\n                users:\n                    state.users.filter(user => user._id !== action.payload.data.user._id)\n            };\n        case GET_ERRORS:\n            return {\n                ...state,\n                errors: action.payload\n            }\n        case SHOW_USER:\n            return {\n                ...state,\n                user: action.payload\n            }\n            default:\n                return {\n                    ...state\n                };\n    }\n}\n","import {\n    LIST_DATASETS,\n    DELETE_DATASET,\n    EDIT_DATASET,\n    UPLOAD_DATASET,\n    SHOW_DATASET,\n    CLEAR_VALID_STATE\n} from '../actions/types';\nimport Parser from '../data/parser';\nimport ParserCollection from '../data/parser-collection';\n\nexport default function datasetReducer(state, action) {\n    switch (action.type) {\n        case LIST_DATASETS:\n            var activeIndex = parseInt(localStorage.getItem(\"activeDataRowIndex\"), 10) || 0;\n\n            if (activeIndex >= action.payload.length) {\n                activeIndex = 0;\n            }\n\n            // sort by date, descending\n            var sortedPayload = action.payload.sort((a, b) => {\n                var splitA = a.classDate.split(\"-\");\n                var splitB = b.classDate.split(\"-\");\n\n                return splitA[0] - splitB[0] || splitA[1] - splitB[1] || splitA[2] - splitB[2];\n            }).reverse();\n\n            var dataParsers = sortedPayload.map((dataset, index) => {\n                var parsedData = new Parser(dataset);\n                return Object.assign(parsedData, { isActive: (index === activeIndex) });\n            });\n\n            var parserCollection = new ParserCollection(dataParsers);\n\n            return {\n                ...state,\n                datasets: sortedPayload,\n                dataParsers: dataParsers,\n                activeDataRowIndex: activeIndex,\n                activeDataset: sortedPayload[activeIndex],\n                activeParser: dataParsers[activeIndex],\n                parserCollection: parserCollection\n            };\n        case EDIT_DATASET:\n            return {\n                datasets:\n                    state.datasets.map((dataset) => {\n                        if (dataset._id === action.payload.dataset._id) {\n                            return action.payload.dataset;\n                        }\n\n                        return dataset;\n                    })\n            };\n        case UPLOAD_DATASET:\n            return {\n                datasets: [action.payload.dataset, ...state.datasets],\n                isValid: true\n            };\n        case DELETE_DATASET:\n            return {\n                datasets:\n                    state.datasets.filter(dataset => dataset._id !== action.payload.dataset._id)\n            };\n        case SHOW_DATASET:\n            var activeIndex = action.payload;\n\n            if (action.payload >= state.datasets.length) {\n                activeIndex = 0;\n            }\n\n            return {\n                ...state,\n                activeDataset: state.datasets && state.datasets[activeIndex],\n                activeParser: state.dataParsers && state.dataParsers[activeIndex],\n                activeDataRowIndex: activeIndex\n            }\n        case CLEAR_VALID_STATE:\n            return {\n                ...state,\n                isValid: null\n            }\n        default:\n            return state || {};\n    }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promiseMiddleware from 'redux-promise';\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk, promiseMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/users/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/users/login\", userData)\n        .then(res => {\n            // Save to localStorage\n\n            // Set token to localStorage\n            const {\n                token\n            } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            // Set token to Auth header\n            setAuthToken(token);\n            // Decode token to get user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\n// User loading\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch({type: GET_ERRORS, payload: {}});\n    dispatch(setCurrentUser({}));\n};\n\nexport const loginWithGoogle = (googleResponse) => dispatch => {\n    axios.post(\"/api/users/google-login/\", googleResponse)\n         .then(res => {\n              const {\n                  token\n              } = res.data;\n\n              localStorage.setItem(\"jwtToken\", token);\n              // Set token to Auth header\n              setAuthToken(token);\n              // Decode token to get user data\n              const decoded = jwt_decode(token);\n              // Set current user\n              dispatch(setCurrentUser(decoded));\n         })\n         .catch(err => {\n             dispatch({\n                 type: GET_ERRORS,\n                 payload: err.response && err.response.data\n             });\n        });\n};\n","// https://console.developers.google.com/apis/credentials?project=classinsight\nvar oauth = {\n    clientId: \"302262104197-a1u8tg76brir9v2pq8t17ej7spff4ueg.apps.googleusercontent.com\",\n    clientSecret: \"PpyqkyVP-MH65fvJdRZb_5zQ\",\n};\n  // \"web\": {\n  //   \"client_id\": \"302262104197-a1u8tg76brir9v2pq8t17ej7spff4ueg.apps.googleusercontent.com\",\n  //   \"client_secret\": \"PpyqkyVP-MH65fvJdRZb_5zQ\",\n  //   \"project_id\": \"classinsight\",\n  //   \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  //   \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  //   \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  //   \"redirect_uris\": [\"http://localhost:3000/dashboard\", \"https://app.classinsight.io/dashboard\"],\n  //   \"javascript_origins\": [\"http://localhost:3000\", \"https://app.classinsight.io\"]\n  // }\n\nexport default oauth;\n","export default __webpack_public_path__ + \"static/media/classinsight-logo.db9a2834.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Icon from '@mdi/react';\nimport { mdiAccount, mdiChevronDown, mdiBadgeAccountHorizontalOutline, mdiLogout } from '@mdi/js';\nimport { GoogleLogout } from 'react-google-login';\nimport oauth from '../../config/oauth';\n\nimport ClassInSightLogo from \"../../assets/images/classinsight-logo.png\";\n\nclass Navbar extends Component {\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onGoogleLogoutSuccess(res) {\n        this.props.logoutUser();\n    }\n\n    render() {\n        const { user } = this.props.auth;\n        var isAdmin = user.userType === 100;\n        var isLoggedIn = Object.keys(user).length !== 0 ? true : false;\n\n        return (\n          <div className=\"navbar\">\n            <div className=\"navbar-logo\">\n              <Link\n                to={{\n                  pathname: \"/\"\n                }}>\n                <img src={ClassInSightLogo} alt=\"ClassInSight Logo\" height=\"50\"/>\n              </Link>\n            </div>\n\n            {isLoggedIn ?\n              <div className=\"navbar-dropdown\">\n                <div className=\"navbar-dropdown-profile\">\n                  <div className=\"navbar-dropdown-profile-photo\">\n                    <Icon path={mdiAccount} className=\"navbar-dropdown-icon\" size={1.5} />\n                  </div>\n                  <p className=\"navbar-dropdown-profile-name\">\n                    {user.name}\n                  </p>\n                </div>\n                <Icon path={mdiChevronDown} className=\"navbar-dropdown-icon\" size={1} />\n\n                <div className=\"navbar-dropdown-menu\">\n                  {isAdmin ?\n                  <Link to=\"/admin\">\n                    <div className=\"navbar-dropdown-menu-item\">\n                      <Icon path={mdiBadgeAccountHorizontalOutline} className=\"navbar-dropdown-menu-item-icon\" size={1} />\n                      <span className=\"navbar-dropdown-menu-item-link\">\n                         Manage Users\n                      </span>\n                    </div>\n                  </Link> : \"\"}\n                  \n                  {!this.props.auth.user.isGoogleUser ?\n                    <div className=\"navbar-dropdown-menu-item\">\n                      <Icon path={mdiLogout} className=\"navbar-dropdown-menu-item-icon\" size={1} />\n                      <span className=\"navbar-dropdown-menu-item-link\" onClick={this.onLogoutClick}>\n                         Logout\n                      </span>\n                    </div>\n                  :\n                    <div className=\"navbar-dropdown-menu-item\">\n                      <Icon path={mdiLogout} className=\"navbar-dropdown-menu-item-icon\" size={1} />\n                      <GoogleLogout\n                        clientId={oauth.clientId}\n                        render={renderProps => (\n                          <span onClick={renderProps.onClick} disabled={renderProps.disabled}>Logout</span>\n                        )}\n                        buttonText=\"Logout\"\n                        onLogoutSuccess={this.onGoogleLogoutSuccess.bind(this)}\n                      />\n                    </div>\n                  }\n                </div>\n              </div> : ''\n            }\n\n          </div>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Navbar);\n","import {\n    GET_ERRORS,\n    LIST_DATASETS,\n    DELETE_DATASET,\n    EDIT_DATASET,\n    UPLOAD_DATASET,\n    SHOW_DATASET,\n    CLEAR_VALID_STATE\n} from './types';\nimport axios from 'axios';\n\nexport const editDataset = (dataset) => dispatch => {\n    axios.post(\"/api/datasets/edit\", dataset)\n        .then(res => {\n            console.log(\"Success. Edited dataset:\", dataset.dataset);\n            dispatch({\n                type: EDIT_DATASET,\n                payload: dataset\n            });\n        })\n        .catch(error => {\n            console.error(error);\n\n            // dispatch({\n            //     type: GET_ERRORS,\n            //     payload: error.response && error.response.data\n            // })\n        });\n};\n\nexport const deleteDatasetById = (dataset) => dispatch => {\n    axios.post(\"/api/datasets/edit\", {\n            dataset: {\n                ...dataset,\n                isDeleted: true\n            }\n        })\n        .then(response => {\n            dispatch({\n                type: DELETE_DATASET,\n                payload: response && response.data // dataset\n            })\n        })\n        .catch(error => {\n            console.log(\"Error deleting dataset:\", error);\n        });\n}\n\nexport const showDataset = (datasetIndex) => {\n    return (dispatch) => {\n        dispatch({\n            type: SHOW_DATASET,\n            payload: datasetIndex\n        });\n    };\n};\n\nexport const clearValidState = () => {\n    return (dispatch) => {\n        dispatch({\n            type: CLEAR_VALID_STATE,\n            payload: false\n        });\n\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    }\n}\n\nexport const listDatasets = (userId) => {\n    return (dispatch) => {\n        return axios.get(\"/api/datasets/list\", {\n                params: {\n                    userId: userId\n                }\n            })\n            .then(response => {\n                return response && response.data;\n            })\n            .then(ret => {\n                dispatch({\n                    type: LIST_DATASETS,\n                    payload: ret // datasets\n                });\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport const uploadDataset = (dataset) => dispatch => {\n    axios\n        .post(\"/api/datasets/upload\", dataset)\n        .then(res => {\n            console.log(\"Success. Added dataset:\", res);\n\n            dispatch({\n                type: UPLOAD_DATASET,\n                payload: {\n                    dataset: res.data\n                }\n            })\n        })\n        .catch(error => {\n            console.error(error);\n            console.error(error.response && error.response.data);\n\n            dispatch({\n                type: GET_ERRORS,\n                payload: error.response && error.response.data\n            })\n        });\n};\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { listDatasets } from \"../actions/datasetActions\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.listDatasets(this.props.auth.user.id);\n      this.props.history.push(\"/visualization/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"auth-form-container form-container\">\n        <Link to=\"/register\" className=\"btn\">\n          Register\n        </Link>\n        <Link to=\"/login\" className=\"btn\">\n          Log In\n        </Link>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired,\n  datasets: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  datasets: state.datasets\n});\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { listDatasets }\n)(Landing));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n      if (nextProps.errors) {\n          return ({\n              errors: nextProps.errors\n          });\n      }\n\n      return null;\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"auth-form-container form-container\">\n        <h2 className=\"text-center\">\n          Register\n        </h2>\n\n        <form noValidate onSubmit={this.onSubmit}>\n          <div className=\"input-field\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              autoComplete=\"username\"\n              className={classnames(\"\", {\n                invalid: errors.name\n              })}\n            />\n            <span className=\"input-field-error-text\">{errors.name}</span>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email\n              })}\n            />\n            <span className=\"input-field-error-text\">{errors.email}</span>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password\n              })}\n            />\n            <span className=\"input-field-error-text\">{errors.password}</span>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password2\">Confirm Password</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password2\n              })}\n            />\n            <span className=\"input-field-error-text\">{errors.password2}</span>\n          </div>\n          <button type=\"submit\" className=\"btn btn-submit\">\n            Sign up\n          </button>\n        </form>\n\n        <span className=\"text-with-link\">\n          Already have an account? &nbsp;\n          <Link to=\"/login\" className=\"link\">Log in</Link>\n        </span>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser, loginWithGoogle } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { GoogleLogin } from 'react-google-login';\nimport oauth from '../../config/oauth';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n      // If logged in and user navigates to Login page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/visualization/dashboard\");\n      }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n          nextProps.history.push(\"/visualization/dashboard\"); // push user to dashboard when they login\n      }\n\n      if (nextProps.errors) {\n          return ({\n              errors: nextProps.errors\n          });\n      }\n\n      return null;\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    this.props.loginUser(userData);\n  };\n\n  onGoogleSuccess(response) {\n      this.props.loginWithGoogle(response);\n  }\n  onGoogleFailure(response) {\n      this.props.loginWithGoogle(response);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"auth-form-container form-container\">\n        <h2 className=\"text-center\">\n          Login\n        </h2>\n\n        <form noValidate onSubmit={this.onSubmit}>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              autoComplete=\"username\"\n              className={classnames(\"\", { invalid: errors.email || errors.emailnotfound })} />\n            <span className=\"input-field-error-text\">\n              {errors.email}\n              {errors.emailnotfound}\n            </span>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              className={classnames(\"\", { invalid: errors.password || errors.passwordincorrect })}/>\n            <span className=\"input-field-error-text\">\n              {errors.password}\n              {errors.passwordincorrect}\n            </span>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-submit\">\n            Login\n          </button>\n        </form>\n\n        <div className=\"google-form\">\n          <div className=\"google-form-option\">\n            <div className=\"google-form-option-line\"></div>\n            <span className=\"google-form-option-or\">OR</span>\n            <div className=\"google-form-option-line\"></div>\n          </div>\n          <GoogleLogin\n            clientId={oauth.clientId}\n            buttonText=\"Sign in with Google\"\n            theme=\"dark\"\n            onSuccess={this.onGoogleSuccess.bind(this)}\n            onFailure={this.onGoogleFailure.bind(this)}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n          />\n        </div>\n\n        <span className=\"text-with-link\">\n          Don't have an account? &nbsp;\n          <Link to=\"/register\" className=\"link\">Register</Link>\n        </span>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, loginWithGoogle }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = function({ component: Component, auth, ...rest }) {\n    return (\n        <Route\n          {...rest}\n          render={props =>\n            auth.isAuthenticated === true ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n    );\n}\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nexport default class HoverBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: props.width,\n            height: props.height,\n            display: props.activeLabel === props.label ? \"block\" : \"none\"\n        };\n    }\n\n    handleClick(value) {\n        this.props.handleClick(value);\n    }\n\n    styles() {\n        return {\n            width: `${this.state.width}px`,\n            height: `${this.state.height}px`,\n            display: this.props.label.description ? this.state.display : \"none\"\n        };\n    }\n\n    render() {\n        return (\n          <div className=\"hover-box\" style={this.styles()}>\n            <div className=\"hover-box-title\">\n            </div>\n            <div className=\"hover-box-text\">\n              {this.props.label.description}\n            </div>\n          </div>\n        );\n    }\n}\n\nHoverBox.propTypes = {\n    label: PropTypes.object.isRequired,\n    activeLabel: PropTypes.object.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport HoverBox from './HoverBox';\n\nimport formatPercentage from '../../utils/formatPercentage';\n\nexport default class LegendItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeLabel: {}\n        };\n    }\n    styles(label, isActive = true) {\n        return {\n            backgroundColor: this.isActive() ? label.barColor : \"transparent\",\n            color: label.textColor\n        };\n    }\n\n    isActive() {\n        return (this.props.activeFilters && !this.props.activeFilters.includes(this.props.label.value)) || !this.props.activeFilters;\n    }\n\n    handleClick(value) {\n        this.props.handleClick(value);\n    }\n\n    toggleDefinitionDisplay(label) {\n        var activeLabel = this.state.activeLabel === label ? \"\" : label;\n\n        this.setState({\n            activeLabel: activeLabel\n        });\n    }\n\n    render() {\n      var label = this.props.label,\n          activeLabel = this.state.activeLabel;\n\n      return (\n        <div className=\"legend-item\">\n          <div\n            className=\"legend-item-key\"\n            style={this.styles(label, this.isActive())}\n            onClick={this.handleClick.bind(this, label)}>\n            {this.props.displayRatio ? formatPercentage(label.percentage, 0) : \"\"}\n          </div>\n          <span className=\"legend-item-label\"\n          onMouseOver={this.toggleDefinitionDisplay.bind(this, label)}\n          onMouseOut={this.toggleDefinitionDisplay.bind(this, label)}>\n            {label.text}\n          </span>\n\n          {activeLabel ?\n          <HoverBox\n            label={label}\n            activeLabel={activeLabel}\n            width={200}\n            height=\"max-content\" />\n          : \"\"}\n        </div>\n      );\n    }\n}\n\nLegendItem.propTypes = {\n    label: PropTypes.object.isRequired,\n    displayRatio: PropTypes.bool,\n    handleClick: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport LegendItem from './LegendItem';\n\nexport default class LegendItemGroup extends Component {\n    handleClick(value) {\n        this.props.handleClick(value);\n    }\n\n    render() {\n      var labels = this.props.labels;\n\n      return (\n        <div className=\"legend-item-container\">\n        {labels.map((label, index) => {\n            if (label.value === \"Video\" && label.percentage === 0) {\n                return null;\n            }\n\n            return (\n              <LegendItem\n                key={index}\n                label={label}\n                activeFilters={this.props.activeFilters}\n                displayRatio={this.props.displayRatio}\n                handleClick={this.handleClick.bind(this) }/>\n            );\n        })}\n        </div>\n      );\n    }\n}\n\nLegendItemGroup.propTypes = {\n    labels: PropTypes.array.isRequired,\n    displayRatio: PropTypes.bool,\n    handleClick: PropTypes.func.isRequired,\n    activeFilters: PropTypes.array\n};\n","import React, { Component } from \"react\";\n\nexport default class TrendLinePoint extends Component {\n    handleCircleTooltip(point) {\n        this.props.handleCircleTooltip(point);\n    }\n\n    render() {\n        var xScale = this.props.xScale,\n            yScale = this.props.yScale,\n            point = this.props.point;\n\n        return (\n          <g>\n            <circle\n              className=\"trend-chart-line-point\"\n              onMouseOver={this.handleCircleTooltip.bind(this, this.props.point)}\n              onMouseOut={this.handleCircleTooltip.bind(this, null)}\n              r=\"4\"\n              fill={point.barColor}\n              cx={xScale(point.date)}\n              cy={yScale(point.score)} />\n          </g>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport TrendLinePoint from './TrendLinePoint';\n\nexport default class TrendLine extends Component {\n    handleCircleTooltip(tooltip) {\n        this.props.handleCircleTooltip(tooltip);\n    }\n\n    render() {\n        var xScale = this.props.xScale,\n            yScale = this.props.yScale,\n            trendLine = this.props.trendLine,\n            trendLineDatum = this.props.trendLineDatum,\n            color = this.props.color;\n\n        return (\n          <g className=\"trend-chart-path-group\">\n            <path\n              className=\"trend-chart-line\"\n              d={trendLine(trendLineDatum)}\n              stroke={color} />\n\n            {trendLineDatum.map((point, index) => {\n              return (\n                <TrendLinePoint\n                  key={`circle-${index}`}\n                  xScale={xScale}\n                  yScale={yScale}\n                  point={point}\n                  handleCircleTooltip={this.handleCircleTooltip.bind(this)} />\n              )\n            })}\n          </g>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport * as d3 from 'd3';\n\ninterface AxisProps {\n  scale: d3.ScaleLinear<any, any>;\n}\n\nexport default class TrendChartAxis extends Component<AxisProps> {\n    ref: React.RefObject<SVGGElement>;\n\n    constructor(props: AxisProps) {\n        super(props);\n\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.ref.current) {\n            d3.select(this.ref.current)\n            .attr(\"class\", this.props.className)\n            .attr(\"transform\", this.props.transform)\n            .call(this.props.axis);\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.ref.current) {\n            d3.select(this.ref.current)\n              .transition()\n              .attr(\"class\", this.props.className)\n              .attr(\"transform\", this.props.transform)\n              .call(this.props.axis);\n        }\n    }\n\n    render() {\n        return (\n            <g ref={this.ref} />\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport * as d3 from 'd3';\nimport TrendLine from './TrendLine';\nimport TrendChartAxis from './TrendChartAxis';\n\nclass TrendChart extends Component {\n    handleCircleTooltip(tooltip) {\n        this.props.handleCircleTooltip(tooltip);\n    }\n\n    render() {\n        var xScale = this.props.scales.xScale,\n            yScale = this.props.scales.yScale,\n            trendLine = d3.line().x((d) => xScale(d.date)).y((d) => yScale(d.score));\n\n        return (\n            <svg className=\"trend-chart-svg\" width={this.props.svgWidth} height={this.props.svgHeight}>\n              {this.props.axes.yAxis.scale().ticks().map((tick, index, array) => {\n                  if (index === 0) { // axis line\n                      return null;\n                  }\n\n                  return (\n                    <line\n                      key={`gridline-${tick}-${index}`}\n                      className=\"trend-chart-gridline\"\n                      x1={this.props.margin.left}\n                      y1={yScale(tick)}\n                      x2={this.props.svgWidth - this.props.margin.right}\n                      y2={yScale(tick)} />\n                  )\n              })}\n\n              {this.props.trendLineData.map((trendLineDatum, index, array) => {\n                  var color = trendLineDatum[0].barColor;\n\n                  return (\n                    <TrendLine\n                      key={index}\n                      xScale={xScale}\n                      yScale={yScale}\n                      trendLine={trendLine}\n                      trendLineDatum={trendLineDatum}\n                      color={color}\n                      handleCircleTooltip={this.handleCircleTooltip.bind(this)} />\n                  );\n              })}\n\n              {this.props.circleTooltip ?\n                <g className=\"trend-chart-tooltip-extent\">\n                  <line\n                    x1={xScale(this.props.circleTooltip.date)}\n                    y1={yScale(this.props.circleTooltip.score)}\n                    x2={xScale(this.props.circleTooltip.date)}\n                    y2={this.props.svgHeight - this.props.margin.top} />\n\n                  <line\n                    x1={xScale(this.props.circleTooltip.date) + 1}\n                    y1={yScale(this.props.circleTooltip.score) + 1}\n                    x2={this.props.margin.right}\n                    y2={yScale(this.props.circleTooltip.score) + 1} />\n                </g>\n              : null}\n\n              <TrendChartAxis\n                className=\"x axis\"\n                transform={this.props.axes.transforms.x}\n                axis={this.props.axes.xAxis} />\n\n              <TrendChartAxis\n                className=\"y axis\"\n                transform={this.props.axes.transforms.y}\n                axis={this.props.axes.yAxis} />\n            </svg>\n        );\n    }\n}\n\nexport default TrendChart;\n","var flattenArray = function(arr) {\n  return [].concat.apply([], arr);\n}\n\nexport default flattenArray;\n","import React, { Component } from \"react\";\nimport * as d3 from 'd3';\nimport TrendChart from './TrendChart';\nimport { removePropertyFromObject } from '../../utils/removePropertyFromObject';\nimport flattenArray from '../../utils/flattenArray';\nimport uuid from 'react-uuid'\n\nexport default class TrendChartContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uuid: uuid(),\n            circleTooltip: null,\n            scales: {},\n            axes: {},\n            display: {\n                svgWidth: 0,\n                svgHeight: 0,\n                margin: {\n                    top: 25,\n                    right: 25,\n                    bottom: 25,\n                    left: 25\n                }\n            },\n            isLoaded: false\n        };\n    }\n\n    handleCircleTooltip(tooltip) {\n        this.setState({\n            circleTooltip: tooltip\n        });\n    }\n\n    parseTime = d3.timeParse(\"%Y-%m-%d\");\n    parseData = function(data) {\n        return data.map((datum) => {\n            return {\n                date: this.parseTime(datum.date),\n                score: datum.formattedPercentageValue\n            }\n        });\n    }\n\n    calculateXScale(xScale, data) {\n        return xScale.domain(d3.extent(data, (d => d.date)));\n    }\n\n    calculateYScale(yScale, data) {\n        var min = Math.ceil(Math.min.apply(Math, data.map(function(row) { return row.score; })));\n        var max = Math.ceil(Math.max.apply(Math, data.map(function(row) { return row.score; })) / 5) * 5;\n\n        return yScale.domain([min, max]);\n    }\n\n    componentDidMount() {\n        var state = this.state,\n            margin = state.display.margin,\n            svgWidth = document.getElementById(`trend-chart-container-${this.state.uuid}`).clientWidth,\n            svgHeight = document.getElementById(`trend-chart-container-${this.state.uuid}`).clientHeight;\n\n        var xRange = d3.scaleTime().range([margin.left, svgWidth - margin.right]);\n        var yRange = d3.scaleLinear().range([svgHeight - margin.bottom, margin.top]);\n\n        var domainData = this.props.data.map((datum) => this.parseData(datum.data))\n        var xScale = this.calculateXScale(xRange, flattenArray(domainData));\n        var yScale = this.calculateYScale(yRange, flattenArray(domainData));\n\n        var xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%m-%d\"));\n        var yAxis = d3.axisLeft(yScale);\n\n        var xAxisTransform = \"translate(0,\" + parseInt(svgHeight - margin.top, 0) + \")\",\n            yAxisTransform = `translate(${margin.bottom}, 0)`;\n\n        this.setState({\n            display: {\n                ...this.state.display,\n                svgWidth: svgWidth,\n                svgHeight: svgHeight\n            },\n            scales: {\n                xScale: xScale,\n                yScale: yScale,\n            },\n            axes: {\n                xAxis: xAxis,\n                yAxis: yAxis,\n                transforms: {\n                    x: xAxisTransform,\n                    y: yAxisTransform\n                }\n            },\n            isLoaded: true\n        });\n    }\n\n    render() {\n        if (this.state.isLoaded) {\n            var state = this.state,\n                activeFilters = this.props.activeFilters,\n                trendLineData = this.props.data.reduce((prev, dataRow) => {\n                    if (!activeFilters.includes(dataRow.value)) {\n                        var metaData = removePropertyFromObject(dataRow, 'data');\n\n                        var newRow = this.parseData(dataRow.data).map((datum) => {\n                            return {\n                                ...datum,\n                                ...metaData\n                            };\n                        });\n\n                        prev.push(newRow);\n                    }\n\n                    return prev;\n                }, []);\n\n            return (\n                <div className=\"trend-chart-container\" id={`trend-chart-container-${this.state.uuid}`}>\n                  <TrendChart\n                    svgWidth={this.state.display.svgWidth}\n                    svgHeight={this.state.display.svgHeight}\n                    margin={this.state.display.margin}\n                    axes={this.state.axes}\n                    scales={state.scales}\n                    trendLineData={trendLineData}\n\n                    circleTooltip={this.state.circleTooltip}\n                    handleCircleTooltip={this.handleCircleTooltip.bind(this)} />\n\n                  <span className=\"trend-chart-container-tooltip\">\n                    {this.state.circleTooltip ?\n                      `${this.state.circleTooltip.text} (${this.state.circleTooltip.score.toFixed(1)}%)`\n                    : null}\n                  </span>\n                </div>\n            );\n        }\n\n        return (\n          <div className=\"trend-chart-container\" id={`trend-chart-container-${this.state.uuid}`}></div>\n        );\n    }\n}\n","var removePropertyFromObject = function(object, propKey) {\n    const { [propKey]: propValue, ...rest } = object;\n    return rest;\n}\n\n/*\nlet object = { a: 1, b: 2, c: 3 };\nobject = removePropertiesFromObject(object, 'a', 'b')\n> result: { c: 3 }\n*/\nconst removePropertiesFromObject = (object, ...keys) => Object.entries(object).reduce((prev, [key, value]) => ({...prev, ...(!keys.includes(key) && { [key]: value }) }), {})\n\nexport { removePropertyFromObject, removePropertiesFromObject }\n","import { format } from 'date-fns';\n\nexport default function formatDate(dateToParse) {\n    var dateObj = dateToParse.split(\"-\").reduce((prev, item, index) => {\n        switch(index) {\n            case 0:\n                prev[\"year\"] = parseInt(item, 10);\n                break;\n            case 1:\n                prev[\"month\"] = parseInt(item, 10) - 1;\n                break;\n            case 2:\n                prev[\"date\"] = parseInt(item, 10);\n                break;\n            default:\n                break;\n        }\n\n        return prev;\n    }, {\n        year: 0,\n        month: 0,\n        date: 0\n    });\n\n    return format(new Date(dateObj['year'], dateObj['month'], dateObj['date']), 'PPP')\n}\n","export default function removeArrayValue(value, array) {\n    var index = array.indexOf(value);\n\n    if (index > -1) {\n        array.splice(index, 1);\n    }\n\n    return array;\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LegendItemGroup from '../legend/LegendItemGroup';\nimport TrendChartContainer from './TrendChartContainer';\nimport formatDate from '../../utils/formatDate';\nimport removeArrayValue from '../../utils/removeArrayValue';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeFilters: []\n        };\n    }\n\n    // same logic as in Transcript::handleClick\n    handleFilterClick(label) {\n        var activeFilters = this.state.activeFilters;\n\n        if (activeFilters.includes(label.value)) {\n            activeFilters = removeArrayValue(label.value, activeFilters)\n        } else {\n            activeFilters.push(label.value);\n        }\n\n        this.setState({\n            activeFilters: activeFilters\n        });\n    }\n\n    render() {\n        if (!this.props.datasets.activeParser) {\n            return (\n              <div className=\"dashboard-container\">\n                <h2>Please upload data to use ClassInSight.</h2>\n              </div>\n            )\n        }\n\n        var parserCollection = this.props.datasets.parserCollection;\n\n        if (parserCollection.dataParsers.length < 2) {\n            return (\n              <div className=\"dashboard-container\">\n                <h2>Please upload more than one data set to view aggregated data.</h2>\n              </div>\n            )\n        }\n\n        return (\n          <div className=\"dashboard-container\">\n            <div className=\"overview-heading\">\n              <h3 className=\"overview-heading-label\">\n                Overview\n              </h3>\n              <select className=\"overview-heading-dropdown\">\n                <option>all time</option>\n                <option>this month</option>\n                <option>this week</option>\n              </select>\n              <h3 className=\"overview-heading-label\">\n                {formatDate(parserCollection.dateRange().start)} - {formatDate(parserCollection.dateRange().end)} (Average duration: {parserCollection.averageDuration()})\n              </h3>\n            </div>\n            <div className=\"even-columns-2\">\n              <div className=\"even-column\">\n                <h4 className=\"text-center\">\n                  Teacher\n                </h4>\n                <div className=\"overview-trend-chart-container\">\n                  <LegendItemGroup\n                    labels={parserCollection.legendLabels({ type: \"Teacher\" })}\n                    activeFilters={this.state.activeFilters}\n                    displayRatio={false}\n                    handleClick={this.handleFilterClick.bind(this)} />\n\n                  <TrendChartContainer\n                    data={parserCollection.aggregatedParserRatios()[\"Teacher\"]}\n                    activeFilters={this.state.activeFilters} />\n                </div>\n              </div>\n              <div className=\"even-column\">\n                <h4 className=\"text-center\">\n                  Student\n                </h4>\n                <div className=\"overview-trend-chart-container\">\n                  <LegendItemGroup\n                    labels={parserCollection.legendLabels({ type: \"Student\" })}\n                    activeFilters={this.state.activeFilters}\n                    displayRatio={false}\n                    handleClick={this.handleFilterClick.bind(this)} />\n\n                  <TrendChartContainer\n                    data={parserCollection.aggregatedParserRatios()[\"Student\"]}\n                    activeFilters={this.state.activeFilters} />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    datasets: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {}\n)(Dashboard));\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport formatPercentage from '../../../utils/formatPercentage';\n\nexport default class TalkRatioSection extends Component {\n    formatStyle(item) {\n        return {\n            height: \"50px\",\n            width: formatPercentage(item.percentage, 2, false),\n            backgroundColor: item.barColor\n        }\n    }\n\n    handleTalkRatioSectionClick(value) {\n        this.props.handleTalkRatioSectionClick(value);\n    }\n\n    render() {\n      var item = this.props.data;\n\n      return (\n        <div\n          className={item.percentage > 0 ? \"talk-ratio-visualization-section\" : \"\"}\n          style={this.formatStyle(item)}\n          onClick={this.props.handleTalkRatioSectionClick.bind(this, item)}>\n        </div>\n      );\n    }\n}\n\nTalkRatioSection.propTypes = {\n    data: PropTypes.object.isRequired,\n    handleTalkRatioSectionClick: PropTypes.func.isRequired,\n};\n","import LegendLabels from '../../../fixtures/legend_labels';\nvar legendLabels = LegendLabels;\n\nexport default function defineInitialStyle(item) {\n    var legendLabelValue = item.utteranceTypes[item.utteranceTypes.length - 1],\n        matchingLegendObj = legendLabels.find(item => item.value === legendLabelValue);\n    \n    var textColor = matchingLegendObj.textColor;\n    var barColor = matchingLegendObj.barColor;\n    var barBorder = \"\";\n    var boxSizing = \"\";\n    if (item.utteranceTypes.length > 1) { // if it has multiple utterance types, draw a border around the bar\n        var borderValue = item.utteranceTypes && item.utteranceTypes[0];\n        barBorder = `3px solid ${legendLabels.find(item => item.value === borderValue).barColor}`;\n        boxSizing = \"border-box\";\n    }\n\n    return {\n        color: textColor,\n        backgroundColor: barColor,\n        border: barBorder,\n        boxSizing: boxSizing\n    };\n}\n","import PropTypes from \"prop-types\";\n\nimport React, { Component } from 'react';\nimport defineInitialStyle from '../turn-taking/defineInitialStyle';\n\nexport default class Utterance extends Component {\n    handleUtteranceClick(utteranceId) {\n        this.props.handleUtteranceClick(utteranceId);\n    }\n\n    render() {\n        var timeStamp = this.props.timeStamp;\n        var utterance = this.props.utterance;\n        var activeLabels = this.props.activeLabels;\n        var isLineHighlighted = false;\n\n        if (activeLabels) {\n            for (var i = 0; i < utterance.utteranceTypes.length; i++) {\n                if (activeLabels.includes(utterance.utteranceTypes[i])) {\n                    isLineHighlighted = true;\n                    break;\n                }\n            }\n        }\n\n        return (\n          <tr className=\"script-turn-utterance\" data-attr-utterance-id={utterance.id} id={utterance.id} onClick={this.handleUtteranceClick.bind(this, utterance.id)}>\n            <td className=\"script-turn-utterance-timestamp\">\n              {timeStamp}\n            </td>\n\n            {utterance.speakerUtterances.map((utteranceItem, index, utteranceArray) => {\n              return (\n                <td\n                  key={index}\n                  className={this.props.canInspect ? \"script-turn-utterance-text inspectable\" : \"script-turn-utterance-text\"}\n                  style={isLineHighlighted ? defineInitialStyle(utterance) : {}}>\n                  {utteranceItem}\n                </td>\n              );\n            })}\n          </tr>\n        )\n    }\n}\n\nUtterance.propTypes = {\n    utterance: PropTypes.object,\n    activeLabels: PropTypes.array,\n}\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport Utterance from './Utterance';\n\nexport default class Script extends Component {\n    componentDidMount() {\n        var url = window.location.href;\n\n        if (url.indexOf(\"#\") > -1) {\n            var utteranceId = url.slice(url.indexOf(\"#\") + 1, url.length);\n            window.setTimeout(function() {\n                var focusId = document.getElementById(utteranceId),\n                    buffer = document.getElementsByClassName(\"navbar\")[0].clientHeight +\n                              document.getElementsByClassName(\"button-selector\")[0].clientHeight;\n\n                const y = focusId.getBoundingClientRect().top - buffer;\n\n                window.scrollTo({top: y, behavior: 'smooth'});\n            }, 1000);\n        }\n\n        window.addEventListener('scroll', this.handleScroll.bind(this));\n        this.handleScroll();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll.bind(this));\n    }\n\n    getElementIdsForFocusWindow() {\n        var scriptTurnContainer = document.getElementsByClassName('script-turn-utterance'),\n            elementsInBounds = [];\n\n        for (var i = 0; i < scriptTurnContainer.length; i++) {\n            var el = scriptTurnContainer[i];\n\n            var elBounds = el.getBoundingClientRect();\n\n            var isElInBounds = elBounds.top >= 0 &&\n                elBounds.left >= 0 &&\n                elBounds.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n                elBounds.bottom <= (window.innerHeight || document.documentElement.clientHeight);\n\n            if (isElInBounds) {\n                elementsInBounds.push(el);\n            } else if (elementsInBounds.length > 0 && !isElInBounds) {\n                break;\n            }\n        }\n\n        var topElId = 0,\n            bottomElId = 0;\n\n        if (elementsInBounds.length) {\n            topElId = parseInt(elementsInBounds[0].getAttribute('data-attr-utterance-id'), 10);\n            bottomElId = parseInt(elementsInBounds[elementsInBounds.length - 1].getAttribute('data-attr-utterance-id'), 10);\n        }\n\n        return {\n            topElId: topElId,\n            bottomElId: bottomElId\n        }\n    }\n\n    handleScroll(event) {\n        var { topElId, bottomElId } = this.getElementIdsForFocusWindow();\n\n        this.props.handleScroll(topElId, bottomElId);\n    }\n\n    handleUtteranceClick(utteranceId) {\n        this.props.handleUtteranceClick(utteranceId);\n    }\n\n    render() {\n      var drilldownFilter = this.props.drilldownFilter,\n          activeTranscript = this.props.transcript;\n\n      // for TalkRatio drilldown\n      if (drilldownFilter) {\n          activeTranscript = this.props.parser.drilldownTranscript({ drilldownFilter: drilldownFilter });\n      }\n\n      return (\n        <div className=\"script-turn-container\">\n          {activeTranscript.map((turn, index, array) => {\n              return (\n                <table key={index} className=\"script-turn\">\n                  <tbody className=\"script-turn-rows\">\n                    <tr className=\"script-turn-speaker\">\n                      <td className=\"script-turn-speaker-timestamp\">\n                        {turn.initialTime} - {turn.endTime}\n                      </td>\n                      <td className=\"script-turn-speaker-text\">\n                        {turn.speakerPseudonym}\n                      </td>\n                    </tr>\n\n                    {turn.utterances.map((utterance, jindex, jarray) => {\n                        var hasTimestamp = utterance.timestamp.length > 0;\n                        var key = `${utterance}-${jindex}`;\n                        var timeStamp = hasTimestamp ? utterance.timestamp : \"\";\n\n                        return (\n                          <Utterance\n                            key={key}\n                            timeStamp={timeStamp}\n                            utterance={utterance}\n                            activeLabels={this.props.activeLabels}\n                            canInspect={this.props.canInspect}\n                            handleUtteranceClick={this.handleUtteranceClick.bind(this)} />\n                        );\n                    })}\n                  </tbody>\n                </table>\n              );\n          })}\n        </div>\n      )\n    }\n}\n\nScript.propTypes = {\n    transcript: PropTypes.array.isRequired,\n    activeLabels: PropTypes.array,\n    focusBox: PropTypes.object,\n    handleScroll: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\n\nimport TalkRatioSection from './TalkRatioSection';\nimport Script from '../transcript/Script';\nimport LegendItemGroup from '../../legend/LegendItemGroup';\n\nimport formatPercentage from '../../../utils/formatPercentage';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n/*\nFor this file, the data we're after is in data.segments[0].speaking_turns.\nEach object in this array is a record of someone speaking. It has this structure:\n{\n    duration: 0\n    end_time: \"[00:00:00;23]\",\n​​​​    initial_time: \"[00:00:00;23]\",\n    speaker_pseudonym: \"Teacher\",\n    tokens_per_second: 0,\n​​​​​    total_tokens: 108,\n​​​​​    utterances: [],\n}\n\nUtterances is an array of objects that contain information about what was said.\nEach object in the array has this structure:\n{\n    line_number: \"8\",\n​​​​​​​    n_tokens: 14,\n​​​​​​​​    timestamp: \"\",\n​​​​​​​​    utterance: \"Ok, so what is it that you though- ...\",\n    utterance_type: [ \" Teachers  Open-Ended  Statements/Question (S/Q)\" ]\n}\n*/\n\nclass TalkRatio extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            drilldownFilter: \"\",\n        };\n    }\n\n    calculateSpeakerTotal(type) {\n        var parser = this.props.datasets.activeParser;\n        var speakerTalkTotals = parser.speakerTalkTotals();\n        var speakerTotalObj = speakerTalkTotals.filter((item) => item.speakerType === type);\n        return speakerTotalObj[0].totalTalkPercentage;\n    }\n\n    handleTalkRatioSectionClick(label) {\n        var drilldownFilter = label.value === this.state.drilldownFilter ? \"\" : label.value;\n\n        if (drilldownFilter === this.state.drilldownFilter) {\n            drilldownFilter = \"\";\n        }\n\n        this.setState({\n            drilldownFilter: drilldownFilter\n        });\n    }\n\n    handleUtteranceClick(utteranceId) {\n        var slashTurnTaking = this.props.location.pathname.slice(this.props.location.pathname.lastIndexOf(\"/\"));\n        var newPathname = this.props.location.pathname.replace(slashTurnTaking, `/transcript#${utteranceId}`);\n        this.props.history.push(newPathname);\n    }\n\n    render() {\n        var areDatasetsLoaded = this.props.datasets.activeParser;\n\n        if (!areDatasetsLoaded) {\n            return null;\n        }\n\n        var parser = this.props.datasets.activeParser,\n            teacherTalkRatios = parser.teacherTalkRatios(),\n            studentTalkRatios = parser.studentTalkRatios(),\n            transcript = parser.transcript();\n\n        return (\n          <div className=\"talk-ratio-visualization-container\">\n            <div className=\"talk-ratio-legend-teacher\">\n              <h3 className=\"talk-ratio-visualization-heading\">\n                Teacher Talk: {formatPercentage(this.calculateSpeakerTotal(\"Teacher\"), 0)}\n              </h3>\n              <LegendItemGroup\n                labels={parser.legendLabels({ type: \"Teacher\" })}\n                displayRatio={true}\n                handleClick={() => {}} />\n              <LegendItemGroup\n                labels={parser.legendLabels({ type: \"Media\" })}\n                displayRatio={true}\n                handleClick={() => {}} />\n            </div>\n            <div className=\"talk-ratio-visualization\">\n              <div className=\"talk-ratio-visualization-chart\">\n                {teacherTalkRatios.map((item, index, array) => {\n                    return (\n                      <TalkRatioSection\n                        key={index}\n                        data={item}\n                        handleTalkRatioSectionClick={this.handleTalkRatioSectionClick.bind(this)} />\n                    );\n                })}\n                <div className=\"talk-ratio-visualization-divider\"></div>\n                {studentTalkRatios.map((item, index, array) => {\n                    return (\n                      <TalkRatioSection\n                        key={index}\n                        data={item}\n                        handleTalkRatioSectionClick={this.handleTalkRatioSectionClick.bind(this)} />\n                    );\n                })}\n              </div>\n              <div className=\"talk-ratio-visualization-drilldown\">\n                {this.state.drilldownFilter ?\n                  <Script\n                    parser={parser}\n                    transcript={transcript}\n                    drilldownFilter={this.state.drilldownFilter}\n                    canInspect={true}\n                    handleUtteranceClick={this.handleUtteranceClick.bind(this)}\n                    handleScroll={() => {}} />\n                : \"\"}\n              </div>\n            </div>\n            <div className=\"talk-ratio-legend-student\">\n              <h3 className=\"talk-ratio-visualization-heading text-right\">\n                Student Talk: {formatPercentage(this.calculateSpeakerTotal(\"Student\"), 0)}\n              </h3>\n              <LegendItemGroup\n                labels={parser.legendLabels({ type: \"Student\" })}\n                displayRatio={true}\n                handleClick={() => {}} />\n            </div>\n          </div>\n        )\n    }\n}\n\nTalkRatio.propTypes = {\n    datasets: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {}\n)(TalkRatio));\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport formatPercentage from '../../utils/formatPercentage';\n\nexport default class LegendButton extends Component {\n    styles(label) {\n        var styles = {};\n        if (this.props.activeLabels.includes(label.value)) {\n            styles = {\n                backgroundColor: label.barColor,\n                color: label.textColor\n            };\n        }\n\n        return styles;\n    }\n\n    handleClick(label) {\n        this.props.handleClick(label);\n    }\n\n    render() {\n      var label = this.props.label;\n\n      return (\n        <div className=\"legend-button\" style={this.styles(label)} onClick={this.handleClick.bind(this, label)}>\n          {label.text} {this.props.displayRatio ? `(${formatPercentage(label.percentage, 0)})` : \"\"}\n        </div>\n      );\n    }\n}\n\nLegendButton.propTypes = {\n    label: PropTypes.object.isRequired,\n    handleClick: PropTypes.func,\n    activeLabels: PropTypes.array\n};\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport LegendButton from './LegendButton';\n\nimport Icon from '@mdi/react';\nimport { mdiChevronDown, mdiChevronUp } from '@mdi/js';\n\nexport default class LegendButtonGroup extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          isCollapsed: false\n      };\n    }\n\n    toggleGroup(isCollapsed) {\n        this.setState({ isCollapsed: !isCollapsed });\n    }\n\n    handleClick(label) {\n        this.props.handleClick(label);\n    }\n\n    render() {\n      var isCollapsed = this.state.isCollapsed,\n          labels = this.props.labels;\n\n      return (\n        <div className=\"legend-button-container\">\n          <div className={isCollapsed ? \"legend-button-dropdown collapsed\" : \"legend-button-dropdown\"} onClick={this.toggleGroup.bind(this, this.state.isCollapsed)}>\n            <span className=\"legend-button-dropdown-text\">{labels[0].type}</span>\n            {isCollapsed ?\n              <Icon path={mdiChevronUp} className=\"legend-button-dropdown-toggle\" size={1} /> :\n              <Icon path={mdiChevronDown} className=\"legend-button-dropdown-toggle\" size={1} />}\n          </div>\n          <div className=\"legend-buttons\">\n            {labels.map((label, index) => {\n                if (label.value === \"Video\" && label.percentage === 0) {\n                    return null;\n                }\n\n                return (\n                  <LegendButton\n                    key={index}\n                    label={label}\n                    displayRatio={this.props.displayRatio}\n                    activeLabels={this.props.activeLabels}\n                    handleClick={this.handleClick.bind(this, label)} />\n                );\n            })}\n          </div>\n        </div>\n      );\n    }\n}\n\nLegendButtonGroup.propTypes = {\n    handleClick: PropTypes.func,\n    displayRatio: PropTypes.bool,\n    labels: PropTypes.array.isRequired,\n    activeLabels: PropTypes.array\n};\n","import defineInitialStyle from './defineInitialStyle';\n\nexport default function drawBarStyles(item, areBarsSmall = false) {\n    var isStudentData = item.speakerPseudonym.includes(\"Student\"),\n        isTeacherData = !item.speakerPseudonym.includes(\"Student\"),\n        initialStyle = defineInitialStyle(item);\n\n    var barWidth = item.nTokens,\n        barHeight = \"14px\";\n\n    if (areBarsSmall) {\n        barHeight = \"3px\";\n    }\n\n    var baseStyle = { height: barHeight },\n        extendedStyle = { ...initialStyle, width: barWidth },\n        teacherStyle = {},\n        studentStyle = {};\n\n    if (isTeacherData) {\n        studentStyle = baseStyle;\n        teacherStyle = { ...baseStyle, ...extendedStyle };\n    }\n\n    if (isStudentData) {\n        studentStyle = { ...baseStyle, ...extendedStyle };\n        teacherStyle = baseStyle;\n    }\n\n    return {\n        teacherStyle: teacherStyle,\n        studentStyle: studentStyle\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport drawBarStyles from './drawBarStyles';\n\nexport default class TurnTakingSmall extends Component {\n    render() {\n        var chartData = this.props.parser.parsedData().expanded,\n            chartWidth = this.props.chartWidth,\n            barHeight = this.props.barHeight,\n            focusBox = this.props.focusBox,\n            boxHeight = focusBox.height + barHeight,\n            boxOffset = barHeight * focusBox.topElId;\n\n        return (\n            <div className=\"turn-taking-bars-small-visualization\" style={{ minWidth: `${chartWidth}px` }}>\n              {chartData.map((item, index) => {\n                  var { teacherStyle, studentStyle } = drawBarStyles(item, true);\n\n                  return (\n                      <div key={index} className=\"turn-taking-bar-small\" data-attr-utterance-id={item.id} style={{height: `${barHeight}px`}}>\n                        <div className=\"turn-taking-bar-teacher-outer\">\n                          <div className=\"turn-taking-bar-teacher-inner\" style={teacherStyle}>\n                          </div>\n                        </div>\n                        <div className=\"turn-taking-bar-student-outer\">\n                          <div className=\"turn-taking-bar-student-inner\" style={studentStyle}>\n                          </div>\n                        </div>\n                      </div>\n                  );\n              })}\n              <div className=\"turn-taking-bars-small-focus-box\" style={{height: `${boxHeight}px`, top: boxOffset}}>\n              </div>\n            </div>\n        );\n    }\n}\n\nTurnTakingSmall.propTypes = {\n    chartWidth: PropTypes.number.isRequired,\n    barHeight: PropTypes.number.isRequired,\n    focusBox: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\nimport LegendButtonGroup from '../../legend/LegendButtonGroup';\nimport TurnTakingSmall from '../turn-taking/TurnTakingSmall';\nimport Script from '../transcript/Script';\n\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport removeArrayValue from '../../../utils/removeArrayValue';\n\nclass Transcript extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeLabels: [],\n            focusBox: {\n                topElId: 0,\n                bottomElId: 0,\n                y: 0,\n                height: 0\n            }\n        };\n    }\n\n    // same logic as in TurnTaking::handleFilterClick\n    handleClick(label) {\n        var activeLabels = this.state.activeLabels;\n\n        if (activeLabels.includes(label.value)) {\n            activeLabels = removeArrayValue(label.value, activeLabels)\n        } else {\n            activeLabels.push(label.value);\n        }\n\n        this.setState({\n            activeLabels: activeLabels\n        });\n    }\n\n    barHeight = 3\n\n    handleScroll(topElId, bottomElId) {\n        // calculate focusBox.height\n        var turnTakingBarsSmall = document.getElementsByClassName(\"turn-taking-bars-small-visualization\")[0];\n\n        if (!turnTakingBarsSmall) return;\n\n        var topOfBox = turnTakingBarsSmall.querySelectorAll(`.turn-taking-bars-small-visualization [data-attr-utterance-id='${topElId}']`)[0];\n        var bottomOfBox = turnTakingBarsSmall.querySelectorAll(`.turn-taking-bars-small-visualization [data-attr-utterance-id='${bottomElId}']`)[0];\n        var topOfBoxY = topOfBox.getBoundingClientRect().y;\n        var bottomOfBoxY = bottomOfBox.getBoundingClientRect().y;\n        var boxHeight = bottomOfBoxY - topOfBoxY + 1;\n\n        // focus the box\n        turnTakingBarsSmall.scrollTo(0, topElId * this.barHeight);\n\n        var focusBox = {\n            topElId: topElId,\n            bottomElId: bottomElId,\n            height: boxHeight,\n        };\n\n        this.setState({\n            focusBox: focusBox\n        });\n    }\n\n    render() {\n        var areDatasetsLoaded = this.props.datasets.activeParser;\n\n        if (!areDatasetsLoaded) {\n            return null;\n        }\n\n        var parser = this.props.datasets.activeParser,\n            chartWidth = 2 * parser.maxNTokens(), // double width - for both left/right side of TurnTakingSmall chart\n            transcript = parser.transcript();\n\n        return (\n          <div className=\"transcript-visualization-container\">\n            <div className=\"transcript-visualization-legend\">\n              <LegendButtonGroup\n                labels={parser.legendLabels({ type: \"Teacher\"})}\n                displayRatio={true}\n                activeLabels={this.state.activeLabels}\n                handleClick={this.handleClick.bind(this)} />\n              <LegendButtonGroup\n                labels={parser.legendLabels({ type: \"Student\"})}\n                displayRatio={true}\n                activeLabels={this.state.activeLabels}\n                handleClick={this.handleClick.bind(this)} />\n              <LegendButtonGroup\n                labels={parser.legendLabels({ type: \"Technique\"})}\n                displayRatio={true}\n                activeLabels={this.state.activeLabels}\n                handleClick={this.handleClick.bind(this)} />\n            </div>\n\n            <TurnTakingSmall\n              parser={parser}\n              chartWidth={chartWidth}\n\n              barHeight={this.barHeight}\n              focusBox={this.state.focusBox} />\n\n            <div className=\"transcript-script-container\" style={{ marginLeft: `${chartWidth}px` }}>\n              <Script\n                transcript={transcript}\n                activeLabels={this.state.activeLabels}\n                focusBox={this.state.focusBox}\n                handleScroll={this.handleScroll.bind(this)}\n                handleUtteranceClick={() => {}} />\n            </div>\n          </div>\n        );\n    }\n}\n\nTranscript.propTypes = {\n    datasets: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { }\n)(Transcript));\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nexport default class HoverScript extends Component {\n    handleTextClick(turnId) {\n        this.props.handleTextClick(turnId);\n    }\n\n    render() {\n        var turn = this.props.data;\n\n        return (\n          <div className=\"script-turn-container\" id={turn.id} onClick={this.handleTextClick.bind(this, turn.id)}>\n            <table className=\"script-turn\">\n              <tbody className=\"script-turn-rows\">\n                <tr className=\"script-turn-speaker\">\n                  <td className=\"script-turn-speaker-text\">\n                    {turn.speakerPseudonym}\n                  </td>\n                </tr>\n\n                {turn.speakerUtterances.map((utterance, jindex, jarray) => {\n                    return (\n                      <tr key={jindex} className=\"script-turn-utterance\">\n                        <td className={this.props.canInspect ? \"script-turn-utterance-text inspectable\" : \"script-turn-utterance-text\"}>\n                          {utterance}\n                        </td>\n                      </tr>\n                    );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )\n    }\n}\n\nHoverScript.propTypes = {\n    data: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\n\nimport Turn from '../transcript/Turn';\n\nimport drawBarStyles from './drawBarStyles';\nimport isObjectEmpty from '../../../utils/isObjectEmpty';\n\nexport default class Bar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hoveredTurn: {}\n        };\n    }\n\n    handleMouseOver() {\n        if (isObjectEmpty(this.props.activeTurn)) {\n            this.setState({\n                hoveredTurn: this.props.data\n            });\n        }\n    }\n\n    handleMouseOut(value) {\n        if (value.id !== this.props.activeTurn.id) {\n            this.setState({\n                hoveredTurn: {}\n            });\n        }\n    }\n\n    handleBarClick(turnObj) {\n        this.props.handleBarClick(turnObj);\n    }\n\n    handleTextClick(turnId) {\n        this.props.handleTextClick(turnId);\n    }\n\n    render() {\n        var item = this.props.data,\n            timeStamp = \"\";\n\n        switch (item.timestamp.length) {\n            case 0: break;\n            case 1: timeStamp = item.timestamp[0]; break;\n            default: timeStamp = `${item.timestamp[0]} - ${item.timestamp[item.timestamp.length - 1]}`;\n        }\n\n        var { teacherStyle, studentStyle } = drawBarStyles(item);\n\n        var isActive = this.state.hoveredTurn.id === item.id || this.props.activeTurn.id === item.id;\n\n        return (\n          <div className=\"turn-taking-visualization-row\"\n          onMouseOver={this.handleMouseOver.bind(this, item)}\n          onMouseOut={this.handleMouseOut.bind(this, item)}\n          onClick={this.handleBarClick.bind(this, item)}>\n            <div className={item.timestamp.length > 1 ? \"turn-taking-bar-timestamp-range\" : \"turn-taking-bar-timestamp-time\"}>\n              {timeStamp}\n            </div>\n            <div key={item.id} className={isActive ? \"turn-taking-bar active\" : \"turn-taking-bar\"}>\n              <div className=\"turn-taking-bar-teacher-outer\">\n                <div className=\"turn-taking-bar-teacher-inner\" style={teacherStyle}></div>\n              </div>\n              <div className=\"turn-taking-bar-student-outer\">\n                <div className=\"turn-taking-bar-student-inner\" style={studentStyle}></div>\n              </div>\n            </div>\n\n            {isActive ?\n              <Turn\n                data={item}\n                handleTextClick={this.handleTextClick.bind(this)}\n                canInspect={true} />\n            : \"\"}\n          </div>\n      );\n    }\n}\n","export default function isObjectEmpty(value) {\n    return Boolean(value && typeof value === 'object') && !Object.keys(value).length;\n}\n","import React, { Component } from 'react';\nimport Bar from './Bar';\nimport LegendItemGroup from '../../legend/LegendItemGroup';\n\nimport Icon from '@mdi/react';\nimport { mdiArrowCollapseVertical, mdiArrowExpandVertical } from '@mdi/js';\n\nimport removeArrayValue from '../../../utils/removeArrayValue';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n/*\nFor this file, the data we're after is in data.segments[0].speaking_turns.\nEach object in this array is a record of someone speaking. It has this structure:\n{\n    duration: 0\n    end_time: \"[00:00:00;23]\",\n​​​​    initial_time: \"[00:00:00;23]\",\n    speaker_pseudonym: \"Teacher\",\n    tokens_per_second: 0,\n​​​​​    total_tokens: 108,\n​​​​​    utterances: [],\n}\n\nUtterances is an array of objects that contain information about what was said.\nEach object in the array has this structure:\n{\n    line_number: \"8\",\n​​​​​​​    n_tokens: 14,\n​​​​​​​​    timestamp: \"\",\n​​​​​​​​    utterance: \"Ok, so what is it that you though- ...\",\n    utterance_type: [ \" Teachers  Open-Ended  Statements/Question (S/Q)\" ]\n}\n*/\n\nclass TurnTaking extends Component {\n    constructor(props) {\n        super(props);\n\n        var bars = localStorage.getItem(\"bars\") || \"expanded\",\n            activeFilters = [];\n\n        this.state = {\n            bars: bars,\n            activeFilters: activeFilters,\n            activeTurn: {}\n        };\n    }\n\n    toggleExpandedBars = function(value, context) {\n        this.setState({ \"bars\": value });\n        localStorage.setItem(\"bars\", value);\n    }\n\n    barsStateIcon = {\n        \"expanded\": <Icon\n          path={mdiArrowCollapseVertical}\n          className=\"turn-taking-visualization-heading-icon\"\n          onClick={this.toggleExpandedBars.bind(this, \"collapsed\")}\n          size={1} />,\n        \"collapsed\": <Icon\n          path={mdiArrowExpandVertical}\n          className=\"turn-taking-visualization-heading-icon\"\n          onClick={this.toggleExpandedBars.bind(this, \"expanded\")}\n          size={1} />\n    }\n\n    // same logic as in Transcript::handleClick\n    handleFilterClick(label) {\n        var activeFilters = this.state.activeFilters;\n\n        if (activeFilters.includes(label.value)) {\n            activeFilters = removeArrayValue(label.value, activeFilters)\n        } else {\n            activeFilters.push(label.value);\n        }\n\n        this.setState({\n            activeFilters: activeFilters\n        });\n    }\n\n    handleBarClick(value) {\n        if (value.id === this.state.activeTurn.id) {\n            value = {};\n        }\n\n        this.setState({\n            activeTurn: value\n        });\n    }\n\n    handleTextClick(turnId) {\n        var slashTurnTaking = this.props.location.pathname.slice(this.props.location.pathname.lastIndexOf(\"/\"));\n        var newPathname = this.props.location.pathname.replace(slashTurnTaking, `/transcript#${turnId}`);\n        this.props.history.push(newPathname);\n    }\n\n    render() {\n        var areDatasetsLoaded = this.props.datasets.activeParser;\n\n        if (!areDatasetsLoaded) {\n            return null;\n        }\n\n        var parser = this.props.datasets.activeParser,\n            chartData = parser.parsedData({activeFilters: this.state.activeFilters})[this.state.bars] || [];\n\n        return (\n            <div className=\"turn-taking-visualization-container\">\n              <div className=\"turn-taking-legend-teacher\">\n                <LegendItemGroup\n                  labels={parser.legendLabels({ type: \"Teacher\"})}\n                  activeFilters={this.state.activeFilters}\n                  handleClick={this.handleFilterClick.bind(this) }/>\n                <LegendItemGroup\n                  labels={parser.legendLabels({ type: \"Technique\"})}\n                  activeFilters={this.state.activeFilters}\n                  handleClick={this.handleFilterClick.bind(this) }/>\n              </div>\n              <div className=\"turn-taking-visualization\">\n                <div className=\"turn-taking-visualization-headings\">\n                  <h2 className=\"turn-taking-visualization-heading\">\n                    Teacher Talk\n                    {this.barsStateIcon[this.state.bars]}\n                  </h2>\n\n                  <h2 className=\"turn-taking-visualization-heading\">\n                    Student Talk\n                  </h2>\n                </div>\n                {chartData.map((item, index) => {\n                    return (\n                      <Bar\n                        key={index}\n                        data={item}\n                        handleBarClick={this.handleBarClick.bind(this)}\n                        handleTextClick={this.handleTextClick.bind(this)}\n                        activeTurn={this.state.activeTurn} />\n                    )\n                })}\n              </div>\n              <div className=\"turn-taking-legend-student\">\n                <LegendItemGroup\n                  labels={parser.legendLabels({ type: \"Student\"})}\n                  activeFilters={this.state.activeFilters}\n                  handleClick={this.handleFilterClick.bind(this) }/>\n              </div>\n            </div>\n        );\n    }\n}\n\n\nTurnTaking.propTypes = {\n    datasets: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { }\n)(TurnTaking));\n","import Dashboard from \"../components/dashboard/Dashboard\";\nimport TalkRatio from '../components/visualization/talk-ratio/TalkRatio';\nimport Transcript from '../components/visualization/transcript/Transcript';\nimport TurnTaking from '../components/visualization/turn-taking/TurnTaking';\n\nimport Icon from '@mdi/react';\nimport { mdiViewDashboardVariantOutline, mdiBarcode, mdiChartGantt, mdiCommentTextMultipleOutline } from '@mdi/js';\n\nvar definitions = function(admin) {\n    var routePrefix = \"/visualization\";\n\n    if (admin) {\n        routePrefix = `/admin/user/${admin.userId}/preview`;\n    }\n\n    return [{\n        path: `${routePrefix}/dashboard`,\n        component: (props) => ( <Dashboard {...props} /> ),\n        buttonValue: \"dashboard\",\n        label: \"Dashboard\",\n        icon: <Icon path={mdiViewDashboardVariantOutline} className=\"button-selector-item-icon\" size={1} />\n    }, {\n        path: `${routePrefix}/talk-ratio`,\n        component: (props) => ( <TalkRatio {...props} /> ),\n        buttonValue: \"talk-ratio\",\n        label: \"Talk Ratio\",\n        icon: <Icon path={mdiBarcode} className=\"button-selector-item-icon\" size={1.5} />\n    }, {\n        path: `${routePrefix}/turn-taking`,\n        component: (props) => ( <TurnTaking {...props} /> ),\n        buttonValue: \"turn-taking\",\n        label: \"Turn Taking\",\n        icon: <Icon path={mdiChartGantt} className=\"button-selector-item-icon\" size={1} />\n    }, {\n        path: `${routePrefix}/transcript`,\n        component: (props) => ( <Transcript {...props} /> ),\n        buttonValue: \"transcript\",\n        label: \"Transcript\",\n        icon: <Icon path={mdiCommentTextMultipleOutline} className=\"button-selector-item-icon\" size={1} />\n    }];\n};\n\nvar paths = definitions().reduce((prev, routeObj) => {\n    prev.push(routeObj.path);\n    return prev;\n}, []);\n\nvar dashboardRoutes = { definitions, paths };\n\nexport default dashboardRoutes;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Icon from '@mdi/react';\nimport { mdiAccount } from '@mdi/js';\nimport dashboardRoutes from '../../fixtures/dashboardRoutes';\n\nclass ButtonSelector extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        var buttonSelectorSelectedOption = nextProps.location.pathname.slice(nextProps.location.pathname.lastIndexOf(\"/\") + 1);\n        if (buttonSelectorSelectedOption !== nextProps.buttonSelectorSelectedOption) {\n            this.handleClick(buttonSelectorSelectedOption);\n        }\n\n        return true;\n    }\n\n    handleClick(value) {\n        this.props.handleClick(value);\n    }\n\n    render() {\n        // Note 1/31/21: Leave this here for now in case something breaks.\n        // var areDatasetsLoaded = this.props.datasets.activeParser;\n        //\n        // if (!areDatasetsLoaded) {\n        //     return null;\n        // }\n\n        return (\n          <div className=\"button-selector\">\n            <div className=\"button-selector-options\">\n              {dashboardRoutes.definitions(this.props.admin).map((definitionObj, index, array) => {\n                  return (\n                    <Link\n                      key={index}\n                      className={this.props.buttonSelectorSelectedOption === definitionObj.buttonValue ? \"button-selector-item active\" : \"button-selector-item\"}\n                      data-attr-name={definitionObj.buttonValue}\n                      to={definitionObj.path}\n                      onClick={this.handleClick.bind(this, definitionObj.buttonValue)}>\n\n                      {definitionObj.icon}\n\n                      <span className=\"button-selector-item-text\">\n                        {definitionObj.label}\n                      </span>\n                    </Link>\n                  );\n              })}\n            </div>\n\n            {this.props.admin ?\n              <div className=\"button-selector-admin-options\">\n                <Link\n                  className=\"button-selector-item active\"\n                  data-attr-name=\"admin-user\"\n                  to={`/admin/user/${this.props.admin.userId}`}>\n                  <Icon path={mdiAccount} className=\"button-selector-item-icon\" size={1} />\n                  <span className=\"button-selector-item-text\">\n                    Back to User Page\n                  </span>\n                </Link>\n              </div>\n            : \"\"}\n\n          </div>\n        );\n    }\n}\n\nButtonSelector.propTypes = {\n    buttonSelectorSelectedOption: PropTypes.string.isRequired,\n    datasets: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { }\n)(ButtonSelector));\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport calculateLessonDuration from '../../utils/calculateLessonDuration';\nimport formatDate from '../../utils/formatDate';\nimport Icon from '@mdi/react';\nimport { mdiChevronDown, mdiChevronUp } from '@mdi/js';\n\nclass SidebarGroup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCollapsed: false,\n        };\n    }\n\n    toggleGroup(isCollapsed) {\n        this.setState({ isCollapsed: !isCollapsed });\n    }\n\n    render() {\n        var isCollapsed = this.state.isCollapsed;\n\n        var linkTo = this.props.buttonSelectorSelectedOption === \"dashboard\" ? `${this.props.match.url}/talk-ratio` : `${this.props.match.url}/${this.props.buttonSelectorSelectedOption}`;\n\n        return (\n          <div className=\"sidebar-group-container\">\n            <div className={isCollapsed ? \"sidebar-group-dropdown collapsed\" : \"sidebar-group-dropdown expanded\"} onClick={this.toggleGroup.bind(this, this.state.isCollapsed)}>\n              <span className=\"sidebar-group-dropdown-text\">{this.props.label}</span>\n              {isCollapsed ?\n                <Icon path={mdiChevronUp} size={1} /> :\n                <Icon path={mdiChevronDown} size={1} />}\n            </div>\n            <div className=\"sidebar-group-data\">\n              {(this.props.datasets.dataParsers || []).map((item, index, array) => {\n                  var datum = item.data;\n                  var topic = item.topic,\n                      date = formatDate(item.date),\n                      period = item.period;\n\n                  return (\n                    <Link key={index} to={linkTo} exact=\"true\">\n                      <div\n                        className={(this.props.datasets.activeDataRowIndex === index) && !this.props.hideActive ? \"sidebar-data-row active\" : \"sidebar-data-row\"}\n                        onClick={this.props.handleSidebarRowCourseClick.bind(this, index)}>\n                        <div className=\"sidebar-data-row-title\">\n                          {topic}\n                        </div>\n\n                        <div className=\"sidebar-data-row-descriptor\">\n                          <span className=\"sidebar-data-row-descriptor-label\">\n                            Date:\n                          </span>\n                          <span className=\"sidebar-data-row-descriptor-value\">\n                            {date}\n                          </span>\n                        </div>\n                        <div className=\"sidebar-data-row-descriptor\">\n                          <span className=\"sidebar-data-row-descriptor-label\">\n                            {period.length > 1 ? \"Periods:\" : \"Period:\"}\n                          </span>\n                          <span className=\"sidebar-data-row-descriptor-value\">\n                            {period.join(\", \")}\n                          </span>\n                        </div>\n                        <div className=\"sidebar-data-row-descriptor\">\n                          <span className=\"sidebar-data-row-descriptor-label\">\n                            Duration:\n                          </span>\n                          <span className=\"sidebar-data-row-descriptor-value\">\n                            {calculateLessonDuration(datum.duration)}\n                          </span>\n                        </div>\n                      </div>\n                    </Link>\n                  );\n              })}\n            </div>\n          </div>\n        )\n    }\n}\n\nSidebarGroup.propTypes = {\n    datasets: PropTypes.object.isRequired,\n}\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { }\n)(SidebarGroup));\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { listDatasets, showDataset } from \"../../actions/datasetActions\";\n\nimport SidebarGroup from './SidebarGroup';\n\nclass Sidebar extends Component {\n    transitionToDashboard() {\n        this.props.history.push(\"/dashboard\");\n    }\n\n    render() {\n        // Note 1/31/21: Leave this here for now in case something breaks.\n        // var areDatasetsLoaded = this.props.datasets.activeParser;\n        //\n        // if (!areDatasetsLoaded) {\n        //     return null;\n        // }\n\n        var isDashboard = this.props.location.pathname.includes(\"dashboard\");\n\n        var { buttonSelectorSelectedOption, sidebarSelectedCourse } = this.props;\n\n        return (\n          <div className=\"sidebar\">\n            <SidebarGroup\n              label=\"Courses\"\n              hideActive={isDashboard}\n              buttonSelectorSelectedOption={buttonSelectorSelectedOption}\n              sidebarSelectedCourse={sidebarSelectedCourse}\n              handleSidebarRowCourseClick={this.props.handleSidebarRowCourseClick.bind(this)}\n              />\n          </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    auth: PropTypes.object.isRequired,\n    datasets: PropTypes.object.isRequired,\n    showDataset: PropTypes.func.isRequired,\n    listDatasets: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        datasets: state.datasets,\n        auth: state.auth\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { showDataset, listDatasets }\n)(Sidebar));\n","import React, { Component } from \"react\";\nimport ButtonSelector from './ButtonSelector';\nimport Sidebar from \"./Sidebar\";\n\nclass DashboardMenus extends Component {\n    render() {\n        var { buttonSelectorSelectedOption, sidebarSelectedCourse, admin } = this.props;\n\n        return (\n          <div>\n            {/* coarse, medium, and fine-grained visualizations */}\n            <ButtonSelector\n              admin={admin}\n              buttonSelectorSelectedOption={buttonSelectorSelectedOption}\n              handleClick={this.props.handleButtonSelectorClick.bind(this)} />\n\n            <Sidebar\n              buttonSelectorSelectedOption={buttonSelectorSelectedOption}\n              sidebarSelectedCourse={sidebarSelectedCourse}\n              handleSidebarRowCourseClick={this.props.handleSidebarRowCourseClick.bind(this)}\n              />\n          </div>\n        )\n    }\n}\n\nexport default DashboardMenus;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DashboardMenus from '../layout/DashboardMenus';\nimport { listDatasets, showDataset } from \"../../actions/datasetActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\n\nimport dashboardRoutes from '../../fixtures/dashboardRoutes';\n\nclass AdminViz extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sidebarSelectedCourse: localStorage.getItem(\"activeDataRowIndex\"),\n            buttonSelectorSelectedOption: localStorage.getItem(\"buttonSelectorSelectedOption\"),\n            areDatasetsLoaded: false,\n            admin: {\n                userId: props.match.params.userId\n            }\n        };\n    }\n\n    handleSidebarRowCourseClick(value) {\n        this.props.showDataset(value);\n\n        localStorage.setItem(\"activeDataRowIndex\", value);\n\n        this.setState({\n            sidebarSelectedCourse: value\n        });\n    }\n\n    handleButtonSelectorClick(value) {\n        localStorage.setItem(\"buttonSelectorSelectedOption\", value);\n\n        this.setState({\n            buttonSelectorSelectedOption: value\n        });\n    }\n\n    dashboardRoutes(admin) {\n        return dashboardRoutes.definitions(this.state.admin);\n    }\n\n    componentDidMount() {\n        this.props.listDatasets(this.state.admin.userId).then((response) => {\n            this.setState({\n                areDatasetsLoaded: true\n            });\n        });\n    }\n\n    render() {\n        // Note 1/31/21: Leave this here for now in case something breaks.\n        // var areDatasetsLoaded = Object.keys(this.props.datasets).length > 0;\n        //\n        // if (!areDatasetsLoaded) {\n        //     return null;\n        // }\n\n        return (\n          <div>\n            <DashboardMenus\n              admin={this.state.admin}\n              sidebarSelectedCourse={this.state.sidebarSelectedCourse}\n              handleSidebarRowCourseClick={this.handleSidebarRowCourseClick.bind(this)}\n              buttonSelectorSelectedOption={this.state.buttonSelectorSelectedOption}\n              handleButtonSelectorClick={this.handleButtonSelectorClick.bind(this)}\n              datasets={this.props.datasets} />\n\n            <div className=\"dashboard-content\">\n                {this.dashboardRoutes(this.state.admin).map((routeObj, index) => {\n                    return (\n                        <PrivateRoute\n                          exact\n                          key={index}\n                          path={routeObj.path}\n                          component={routeObj.component}\n                        />\n                    )\n                })}\n            </div>\n          </div>\n        );\n    }\n}\n\nAdminViz.propTypes = {\n    admin: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    datasets: PropTypes.object.isRequired,\n    listDatasets: PropTypes.func.isRequired,\n    showDataset: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        admin: state.admin,\n        auth: state.auth,\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { listDatasets, showDataset }\n)(AdminViz));\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DashboardMenus from '../layout/DashboardMenus';\nimport { listDatasets, showDataset } from \"../../actions/datasetActions\";\nimport PrivateRoute from \"../private-route/PrivateRoute\";\n\nimport dashboardRoutes from '../../fixtures/dashboardRoutes';\n\nclass UserViz extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sidebarSelectedCourse: localStorage.getItem(\"activeDataRowIndex\"),\n            buttonSelectorSelectedOption: localStorage.getItem(\"buttonSelectorSelectedOption\"),\n            areDatasetsLoaded: false,\n        };\n    }\n\n    handleSidebarRowCourseClick(value) {\n        this.props.showDataset(value);\n\n        localStorage.setItem(\"activeDataRowIndex\", value);\n\n        this.setState({\n            sidebarSelectedCourse: value\n        });\n    }\n\n    handleButtonSelectorClick(value) {\n        localStorage.setItem(\"buttonSelectorSelectedOption\", value);\n\n        this.setState({\n            buttonSelectorSelectedOption: value\n        });\n    }\n\n    dashboardRoutes(admin) {\n        return dashboardRoutes.definitions();\n    }\n\n    componentDidMount() {\n        this.props.listDatasets(this.props.auth.user.id).then((response) => {\n            this.setState({\n                areDatasetsLoaded: true\n            });\n        });\n\n        // set button selector to match URL on refresh\n        // var buttonSelectorSelectedOption = localStorage.getItem(\"buttonSelectorSelectedOption\");\n        // var transcriptLocationHash = localStorage.getItem(\"transcriptLocationHash\");\n        //\n        // if (dashboardRoutes.paths.includes(this.props.location.pathname)) {\n        //     this.props.history.push(`${buttonSelectorSelectedOption}${transcriptLocationHash}`);\n        // }\n        //\n        // this.unlisten = this.props.history.listen((location, action) => {\n        //     var buttonSelectorSelectedOption = location.pathname;\n        //     var transcriptLocationHash = window.location.hash || \"\";\n        //\n        //     if (dashboardRoutes.paths.includes(buttonSelectorSelectedOption)) {\n        //         this.setState({\n        //             buttonSelectorSelectedOption: buttonSelectorSelectedOption.slice(1),\n        //             transcriptLocationHash: transcriptLocationHash\n        //         });\n        //\n        //         localStorage.setItem(\"buttonSelectorSelectedOption\", buttonSelectorSelectedOption.slice(1));\n        //         localStorage.setItem(\"transcriptLocationHash\", transcriptLocationHash);\n        //     }\n        // }).bind(this);\n    }\n\n    componentWillUnmount() {\n        // this.unlisten();\n    }\n\n    render() {\n        return (\n          <div>\n            <DashboardMenus\n              sidebarSelectedCourse={this.state.sidebarSelectedCourse}\n              handleSidebarRowCourseClick={this.handleSidebarRowCourseClick.bind(this)}\n              buttonSelectorSelectedOption={this.state.buttonSelectorSelectedOption}\n              handleButtonSelectorClick={this.handleButtonSelectorClick.bind(this)} />\n\n            <div className=\"dashboard-content\">\n                {this.dashboardRoutes().map((routeObj, index) => {\n                    return (\n                        <PrivateRoute\n                          exact\n                          key={index}\n                          path={routeObj.path}\n                          component={routeObj.component}\n                        />\n                    )\n                })}\n            </div>\n          </div>\n        );\n    }\n}\n\nUserViz.propTypes = {\n    admin: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    datasets: PropTypes.object.isRequired,\n    listDatasets: PropTypes.func.isRequired,\n    showDataset: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        admin: state.admin,\n        auth: state.auth,\n        datasets: state.datasets,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { listDatasets, showDataset }\n)(UserViz));\n","var userTypes = [{\n    label: \"Teacher\",\n    value: 50\n}, {\n    label: \"Researcher\",\n    value: 100\n}];\n\nexport default userTypes;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { editUser } from \"../../actions/adminActions\";\nimport UserTypes from '../../fixtures/user_types';\n\nclass AdminPanelTableRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditingUser: false,\n            errors: {},\n            name: props.user.name,\n            email: props.user.email,\n            userType: props.user.userType\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, state) {\n        var hasErrors = Object.keys(nextProps.errors).length > 0;\n\n        if (hasErrors && state.email !== nextProps.user.email) {\n            return ({\n                errors: nextProps.errors,\n                isEditingUser: true\n            });\n        }\n\n        return null;\n    }\n\n    userTypeAsWords(type) {\n        return UserTypes.filter(obj => obj.value === type)[0] &&\n                UserTypes.filter(obj => obj.value === type)[0].label;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    toggleEditingUser(user) {\n        this.setState({\n            isEditingUser: user ? user : false\n        });\n    }\n\n    deleteUser(user, confirmation) {\n        this.props.deleteUser(user, confirmation);\n    }\n\n    editUser(id) {\n        var user = {\n            _id: id,\n            name: this.state.name,\n            email: this.state.email,\n            userType: parseInt(this.state.userType, 10)\n        }\n\n        this.props.editUser({ user: user });\n\n        this.toggleEditingUser();\n    }\n\n    render() {\n        var { isCurrentUser, isDeletingUser, user } = this.props;\n        var { name, email, userType } = this.state;\n        const { isEditingUser, errors } = this.state;\n\n        if (isEditingUser) {\n            return (\n              <tr>\n                <td>\n                  <input\n                    onChange={this.onChange}\n                    value={name}\n                    error={errors.name}\n                    id=\"name\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                      invalid: errors.name\n                    })}\n                  />\n                  <span className=\"input-field-error-text\">{errors.name}</span>\n                </td>\n                <td>\n                  <input\n                    onChange={this.onChange}\n                    value={email}\n                    error={errors.email}\n                    id=\"email\"\n                    type=\"email\"\n                    className={classnames(\"\", {\n                      invalid: errors.email\n                    })}\n                  />\n                  <span className=\"input-field-error-text\">{errors.email}</span>\n                </td>\n                <td className=\"text-center\">\n                  <select\n                    name=\"userType\"\n                    id=\"userType\"\n                    onChange={this.onChange}\n                    value={userType}>\n\n                    {UserTypes.map((type, index) => {\n                        return (\n                          <option key={index} name={type.value} id={type.value} value={type.value}>{type.label}</option>\n                        )\n                    })}\n                  </select>\n                </td>\n                <td className=\"admin-table-actions\">\n                  <span className=\"btn\" onClick={this.toggleEditingUser.bind(this, null)}>\n                    Cancel\n                  </span>\n                  <span className=\"btn\" onClick={this.editUser.bind(this, user._id)}>\n                    Save user\n                  </span>\n                </td>\n              </tr>\n            )\n        } else if (isDeletingUser) {\n            return (\n              <tr>\n                <td>{name}</td>\n                <td>{email}</td>\n                <td className=\"text-center\">\n                  {this.userTypeAsWords(userType)}\n                </td>\n                <td className=\"admin-table-actions-confirm\">\n                  <span className=\"admin-table-actions-confirm-text\">\n                    Are you sure?\n                  </span>\n                  <div className=\"admin-table-actions-confirm-buttons\">\n                    <span className=\"btn\" onClick={this.deleteUser.bind(this, user, true)}>\n                      Yes, delete\n                    </span>\n                    <span className=\"btn\" onClick={this.deleteUser.bind(this, user, false)}>\n                      No, cancel\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            )\n        } else {\n            return (\n              <tr>\n                <td>\n                  {user.name}\n                </td>\n                <td>{user.email}</td>\n                <td className=\"text-center\">\n                  {this.userTypeAsWords(user.userType)}\n                </td>\n                <td className=\"admin-table-actions\">\n                  <Link to={{\n                    pathname: `/admin/user/${user._id}`,\n                    state: {\n                        user: user\n                    }\n                  }}>\n                    <span className=\"btn\">View</span>\n                  </Link>\n                  <span className=\"btn\" onClick={this.toggleEditingUser.bind(this, user)}>\n                    Edit\n                  </span>\n                  {!isCurrentUser ?\n                    <span className=\"btn\" onClick={this.deleteUser.bind(this, user, false)}>\n                      Delete\n                    </span>\n                  : \"\"}\n                </td>\n              </tr>\n            )\n        }\n    }\n}\n\nAdminPanelTableRow.propTypes = {\n    editUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { editUser }\n)(withRouter(AdminPanelTableRow));\n","import {\n    LIST_USERS,\n    CLEAR_IS_VALID_USER,\n    EDIT_USER,\n    CREATE_USER,\n    DELETE_USER,\n    GET_ERRORS,\n    SHOW_USER,\n    RESET_PASSWORD\n} from './types';\nimport axios from 'axios';\n\n// reset user password\nexport const resetUserPassword = (userData) => dispatch => {\n    axios\n        .post(\"/api/users/reset-password\", userData)\n        .then(res => {\n            dispatch({\n                type: RESET_PASSWORD,\n                payload: {\n                    passwordResetSuccessful: true\n                }\n            })\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const showUserDetails = (userId) => {\n    return (dispatch) => {\n        return axios.get(\"/api/users/show\", {\n                params: {\n                    userId: userId\n                }\n            })\n            .then(response => {\n                dispatch({\n                    type: SHOW_USER,\n                    payload: response && response.data.user\n                })\n            })\n            .catch(error => {\n                console.error(error);\n                return error;\n            });\n    };\n};\n\nexport const fetchUsers = () => {\n    return (dispatch) => {\n        return axios.get(\"/api/users/list\")\n            .then(response => {\n                return response;\n            })\n            .then(response => {\n                dispatch({\n                    type: LIST_USERS,\n                    payload: response // users\n                });\n            })\n            .catch(error => {\n                throw (error);\n            });\n    };\n};\n\nexport const deleteUserById = (user) => dispatch => {\n    axios.post(\"/api/users/delete\", {\n            user: user\n        })\n        .then(response => {\n            dispatch({\n                type: DELETE_USER,\n                payload: response // user\n            })\n        })\n        .catch(error => {\n            console.log(\"Error deleting user:\", error);\n        });\n}\n\nexport const createUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/users/register\", userData)\n        .then(res => {\n            console.log(\"Success. Added user: \", res)\n            dispatch({\n                type: CREATE_USER, // 'admin/userAdded',\n                payload: {\n                    user: res.data\n                }\n            })\n        })\n        .catch(error => {\n            console.log('Error:', error, error.response && error.response.data);\n\n            dispatch({\n                type: GET_ERRORS,\n                payload: error.response && error.response.data\n            })\n        });\n};\n\nexport const clearIsValidUser = () => {\n    return (dispatch) => {\n        dispatch({\n            type: CLEAR_IS_VALID_USER,\n            payload: null\n        });\n\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    };\n};\n\nexport const editUser = (userData) => dispatch => {\n    axios.post(\"/api/users/edit\", userData)\n        .then(res => {\n            console.log(\"Success. Edited user: \", userData);\n            dispatch({\n                type: EDIT_USER,\n                payload: {\n                    userData\n                }\n            });\n        })\n        .catch(error => {\n            console.log('Error:', error);\n\n            dispatch({\n                type: GET_ERRORS,\n                payload: error.response && error.response.data\n            })\n        });\n};\n","var adjectives = [\n    \"Abundant\",\n    \"Accurate\",\n    \"Adorable\",\n    \"Adventurous\",\n    \"Alert\",\n    \"Aloof\",\n    \"Ambitious\",\n    \"Ancient\",\n    \"Animated\",\n    \"Awesome\",\n    \"Abandoned\",\n    \"Abashed\",\n    \"Abatable\",\n    \"Abbreviated\",\n    \"Abducting\",\n    \"Aberrant\",\n    \"Abeyant\",\n    \"Abiding\",\n    \"Bashful\",\n    \"Beautiful\",\n    \"Beneficial\",\n    \"Best\",\n    \"Big\",\n    \"Black\",\n    \"Blue\",\n    \"Boring\",\n    \"Brainy\",\n    \"Bright\",\n    \"Broad\",\n    \"Broken\",\n    \"Busy\",\n    \"Basal\",\n    \"Basaltic\",\n    \"Based\",\n    \"Baseless\",\n    \"Basic\",\n    \"Battleful\",\n    \"Battlemented\",\n    \"Batty\",\n    \"Batwing\",\n    \"Bias\",\n    \"Calm\",\n    \"Capable\",\n    \"Careful\",\n    \"Caring\",\n    \"Cautious\",\n    \"Charming\",\n    \"Cheap\",\n    \"Cheerful\",\n    \"Clean\",\n    \"Clever\",\n    \"Cold\",\n    \"Colorful\",\n    \"Comfortable\",\n    \"Concerned\",\n    \"Confused\",\n    \"Crowded\",\n    \"Curious\",\n    \"Curly\",\n    \"Dangerous\",\n    \"Dark\",\n    \"Delighted\",\n    \"Deep\",\n    \"Delicate\",\n    \"Delicious\",\n    \"Determined\",\n    \"Different\",\n    \"Dry\",\n    \"Dusty\",\n    \"Daily\",\n    \"Dainty\",\n    \"Damp\",\n    \"Dampish\",\n    \"Darkling\",\n    \"Darned\",\n    \"Dauntless\",\n    \"Daylong\",\n    \"Early\",\n    \"Educated\",\n    \"Efficient\",\n    \"Elegant\",\n    \"Empty\",\n    \"Encouraging\",\n    \"Enthusiastic\",\n    \"Excellent\",\n    \"Exciting\",\n    \"Expensive\",\n    \"Fabulous\",\n    \"Fair\",\n    \"Faithful\",\n    \"Famous\",\n    \"Fancy\",\n    \"Fantastic\",\n    \"Fast\",\n    \"Fearless\",\n    \"Friendly\",\n    \"Funny\",\n    \"Gentle\",\n    \"Glamorous\",\n    \"Glorious\",\n    \"Gorgeous\",\n    \"Graceful\",\n    \"Grateful\",\n    \"Great\",\n    \"Green\",\n    \"Handsome\",\n    \"Happy\",\n    \"Healthy\",\n    \"Heavy\",\n    \"Helpful\",\n    \"Hilarious\",\n    \"Historical\",\n    \"Humorous\",\n    \"Hungry\",\n    \"Imaginary\",\n    \"Important\",\n    \"Impossible\",\n    \"Interesting\",\n    \"Jazzed\",\n    \"Jealous\",\n    \"Jolly\",\n    \"Kind\",\n    \"Large\",\n    \"Legal\",\n    \"Light\",\n    \"Literate\",\n    \"Little\",\n    \"Lively\",\n    \"Loud\",\n    \"Lovely\",\n    \"Lucky\",\n    \"Magical\",\n    \"Massive\",\n    \"Messy\",\n    \"Modern\",\n    \"Narrow\",\n    \"Nervous\",\n    \"New\",\n    \"Peaceful\",\n    \"Pink\",\n    \"Polite\",\n    \"Powerful\",\n    \"Precious\",\n    \"Proud\",\n    \"Quick\",\n    \"Quiet\",\n    \"Rapid\",\n    \"Rare\",\n    \"Red\",\n    \"Remarkable\",\n    \"Responsible\",\n    \"Rich\",\n    \"Royal\",\n    \"Secretive\",\n    \"Serious\",\n    \"Sharp\",\n    \"Shiny\",\n    \"Shocking\",\n    \"Short\",\n    \"Shy\",\n    \"Silly\",\n    \"Sincere\",\n    \"Splendid\",\n    \"Strong\",\n    \"Successful\",\n    \"Sweet\",\n    \"Talented\",\n    \"Tall\",\n    \"Terrific\",\n    \"Tactful\",\n    \"Talented\",\n    \"Tangible\",\n    \"Tasteful\",\n    \"Tasty\",\n    \"Teachable\",\n    \"Teeming\",\n    \"Temperate\",\n    \"Tenable\",\n    \"Tenacious\",\n    \"Tender\",\n    \"Terrific\",\n    \"Testimonial\",\n    \"Thankful\",\n    \"Thankworthy\",\n    \"Therapeutic\",\n    \"Thoughtful\",\n    \"Unique\",\n    \"Victorious\",\n    \"Warm\",\n    \"Wide\",\n    \"Wise\",\n    \"Witty\",\n    \"Wonderful\",\n    \"Zealous\"\n];\n\nexport default adjectives;\n","var nouns = [\n    \"Actor\",\n    \"Gold\",\n    \"Painting\",\n    \"Advertisement\",\n    \"Grass\",\n    \"Parrot\",\n    \"Afternoon\",\n    \"Greece\",\n    \"Pencil\",\n    \"Airport\",\n    \"Guitar\",\n    \"Piano\",\n    \"Ambulance\",\n    \"Hair\",\n    \"Pillow\",\n    \"Animal\",\n    \"Hamburger\",\n    \"Pizza\",\n    \"Answer\",\n    \"Helicopter\",\n    \"Planet\",\n    \"Apple\",\n    \"Helmet\",\n    \"Plastic\",\n    \"Army\",\n    \"Holiday\",\n    \"Portugal\",\n    \"Australia\",\n    \"Honey\",\n    \"Potato\",\n    \"Balloon\",\n    \"Horse\",\n    \"Queen\",\n    \"Banana\",\n    \"Hospital\",\n    \"Quill\",\n    \"Battery\",\n    \"House\",\n    \"Rain\",\n    \"Beach\",\n    \"Hydrogen\",\n    \"Rainbow\",\n    \"Beard\",\n    \"Ice\",\n    \"Raincoat\",\n    \"Bed\",\n    \"Insect\",\n    \"Refrigerator\",\n    \"Belgium\",\n    \"Insurance\",\n    \"Restaurant\",\n    \"Boy\",\n    \"Iron\",\n    \"River\",\n    \"Branch\",\n    \"Island\",\n    \"Rocket\",\n    \"Breakfast\",\n    \"Jackal\",\n    \"Room\",\n    \"Jelly\",\n    \"Rose\",\n    \"Camera\",\n    \"Candle\",\n    \"Jordan\",\n    \"Sandwich\",\n    \"Car\",\n    \"Juice\",\n    \"School\",\n    \"Caravan\",\n    \"Kangaroo\",\n    \"Scooter\",\n    \"Carpet\",\n    \"King\",\n    \"Shampoo\",\n    \"Cartoon\",\n    \"Kitchen\",\n    \"Shoe\",\n    \"China\",\n    \"Kite\",\n    \"Soccer\",\n    \"Church\",\n    \"Knife\",\n    \"Spoon\",\n    \"Crayon\",\n    \"Lamp\",\n    \"Stone\",\n    \"Crowd\",\n    \"Lawyer\",\n    \"Sugar\",\n    \"Leather\",\n    \"Sweden\",\n    \"Death\",\n    \"Library\",\n    \"Teacher\",\n    \"Denmark\",\n    \"Lighter\",\n    \"Telephone\",\n    \"Diamond\",\n    \"Lion\",\n    \"Television\",\n    \"Dinner\",\n    \"Lizard\",\n    \"Tent\",\n    \"Disease\",\n    \"Lock\",\n    \"Thailand\",\n    \"Doctor\",\n    \"London\",\n    \"Tomato\",\n    \"Dog\",\n    \"Lunch\",\n    \"Toothbrush\",\n    \"Dream\",\n    \"Machine\",\n    \"Traffic\",\n    \"Dress\",\n    \"Magazine\",\n    \"Train\",\n    \"Truck\",\n    \"Egg\",\n    \"Market\",\n    \"Umbrella\",\n    \"Egypt\",\n    \"Match\",\n    \"Van\",\n    \"Elephant\",\n    \"Microphone\",\n    \"Vase\",\n    \"Energy\",\n    \"Vegetable\",\n    \"Engine\",\n    \"Morning\",\n    \"England\",\n    \"Motorcycle\",\n    \"Wall\",\n    \"Evening\",\n    \"Nail\",\n    \"Whale\",\n    \"Eye\",\n    \"Napkin\",\n    \"Window\",\n    \"Needle\",\n    \"Wire\",\n    \"Nest\",\n    \"Xylophone\",\n    \"Fish\",\n    \"Yacht\",\n    \"Flag\",\n    \"Night\",\n    \"Yak\",\n    \"Flower\",\n    \"Notebook\",\n    \"Zebra\",\n    \"Football\",\n    \"Ocean\",\n    \"Zoo\",\n    \"Forest\",\n    \"Oil\",\n    \"Garden\",\n    \"Fountain\",\n    \"Orange\",\n    \"Gas\",\n    \"France\",\n    \"Oxygen\",\n    \"Furniture\",\n    \"Oyster\",\n    \"Glass\",\n    \"Garage\"\n];\n\nexport default nouns;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createUser } from '../../actions/adminActions';\nimport Adjectives from '../../fixtures/adjectives';\nimport Nouns from '../../fixtures/nouns';\nimport Icon from '@mdi/react';\nimport { mdiGooglePlus } from '@mdi/js';\nimport generateRandomNumber from '../../utils/generateRandomNumber';\nimport UserTypes from '../../fixtures/user_types';\n\nconst CREATE_GOOGLE_ACCOUNT_URL = 'https://accounts.google.com/signup/v2/webcreateaccount?continue=https%3A%2F%2Faccounts.google.com%2FManageAccount%3Fnc%3D1&dsh=S2114698834%3A1605300939529596&gmb=exp&biz=false&flowName=GlifWebSignIn&flowEntry=SignUp&nogm=true';\n\nclass CreateUserForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            userType: 50,\n            password: \"\",\n            password2: \"\",\n            errors: {},\n            emailCopied: false\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.errors) {\n            return ({\n                errors: nextProps.errors\n            });\n        }\n\n        return null;\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            userType: this.state.userType,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n\n        this.props.createUser(newUser);\n    };\n\n    generateGmailUsername() {\n        var adjective = Adjectives[Math.floor(Math.random() * Adjectives.length)];\n        var noun = Nouns[Math.floor(Math.random() * Nouns.length)];\n        var number = generateRandomNumber(100, 999);\n        var username = `${adjective}${noun}${number}`;\n\n        navigator.clipboard.writeText(username);\n\n        this.setState({\n            name: username,\n            email: `${username}@gmail.com`,\n            emailCopied: true\n        });\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n          <div className=\"form-container\">\n            <div className=\"form-header\">\n              <h2>\n                Create new user\n              </h2>\n              <Icon\n                className=\"icon\"\n                path={mdiGooglePlus}\n                title=\"Create Gmail account\"\n                size={1.5}\n                color={\"#0363f3\"}\n                onClick={this.generateGmailUsername.bind(this)} />\n            </div>\n\n            {this.state.emailCopied ?\n              <span className=\"form-confirmation\">\n                <a href={CREATE_GOOGLE_ACCOUNT_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Username copied to clipboard. Click here to create a Google account.\n                </a>\n              </span>\n            : ''}\n\n            <form noValidate>\n              <div className=\"input-field\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"username\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.email}</span>\n              </div>\n\n              <div className=\"input-field\">\n                <label htmlFor=\"userType\">User Type</label>\n                <select\n                  name=\"userType\"\n                  id=\"userType\"\n                  onChange={this.onChange}\n                  value={this.state.userType}>\n\n                  {UserTypes.map((type, index) => {\n                      return (\n                        <option key={index} name={type.value} id={type.value} value={type.value}>{type.label}</option>\n                      )\n                  })}\n                </select>\n              </div>\n\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.password2}</span>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-submit\" onClick={this.onSubmit.bind(this)}>\n                Create user\n              </button>\n            </form>\n          </div>\n        )\n    }\n}\n\nCreateUserForm.propTypes = {\n    createUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors,\n});\n\nexport default connect(\n  mapStateToProps,\n  { createUser }\n)(withRouter(CreateUserForm));\n","export default function generateRandomNumber(min, max) {\n  \tmin = Math.ceil(min);\n  \tmax = Math.floor(max);\n  \treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers, deleteUserById, clearIsValidUser } from '../../actions/adminActions';\nimport AdminPanelTableRow from './AdminPanelTableRow';\nimport CreateUserForm from './CreateUserForm';\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCreatingUser: false,\n            isDeletingUser: false,\n            userToDelete: {}\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchUsers();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.admin.isValidUser && this.state.isCreatingUser) {\n            this.toggleCreateUser();\n        }\n\n        return true;\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.admin.users) {\n            return ({\n                users: nextProps.admin.users,\n                isDeletingUser: false\n            });\n        }\n\n        return null;\n    }\n\n    toggleCreateUser() {\n        if (this.state.isCreatingUser) {\n            this.props.clearIsValidUser();\n        }\n\n        this.setState({\n            isCreatingUser: !this.state.isCreatingUser\n        });\n    }\n\n    deleteUser(user, confirmation = false) {\n        if (confirmation) {\n            this.props.deleteUserById(user);\n            this.setState({\n                userToDelete: {}\n            });\n        }\n\n        if (user._id === this.state.userToDelete._id && !confirmation) { // remove confirmation message\n            this.setState({\n                userToDelete: {}\n            });\n        } else if (Object.entries(this.state.userToDelete).length === 0) { // set confirmation message\n            this.setState({\n                userToDelete: user\n            });\n        }\n    }\n\n    render() {\n        var { users } = this.state;\n\n        return (\n          <div className=\"admin\">\n            <div className=\"admin-header\">\n              <span className=\"btn\" onClick={this.toggleCreateUser.bind(this)}>\n                {this.state.isCreatingUser ? \"Cancel\" : \"Create new user\"}\n              </span>\n\n              {this.state.isCreatingUser ?\n                <CreateUserForm />\n              : \"\"}\n            </div>\n            <table className=\"admin-table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>User Type</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {(users || []).map((user, index) => {\n                    // console.log(\"user\", user);\n                    if (!user) return null;\n\n                    var isCurrentUser = this.props.auth.user.id === user._id,\n                        isDeletingUser = user._id && (this.state.userToDelete._id === user._id);\n\n                    return (\n                      <AdminPanelTableRow\n                        key={index}\n                        user={user}\n                        isCurrentUser={isCurrentUser}\n                        isDeletingUser={isDeletingUser}\n                        deleteUser={this.deleteUser.bind(this)} />\n                    );\n                })}\n              </tbody>\n            </table>\n          </div>\n        );\n    }\n}\n\nAdminPanel.propTypes = {\n    auth: PropTypes.object.isRequired,\n    datasets: PropTypes.object.isRequired,\n    fetchUsers: PropTypes.func.isRequired,\n    clearIsValidUser: PropTypes.func.isRequired,\n    deleteUserById: PropTypes.func.isRequired,\n    admin: PropTypes.object.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n        admin: state.admin,\n        datasets: state.datasets\n    }\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchUsers, deleteUserById, clearIsValidUser }\n)(AdminPanel);\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { uploadDataset } from '../../actions/datasetActions';\n\nclass UploadDataForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            userId: props.userId,\n            classTopic: \"\",\n            isUploaded: false,\n            isValid: false\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (Object.keys(nextProps.errors).length > 0) {\n            return ({\n                errors: nextProps.errors\n            });\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.datasets.isValid) {\n            this.dismountForm();\n        }\n\n        return true;\n    }\n\n    dismountForm() {\n        this.props.dismountForm();\n    }\n\n    onChange = e => {\n        this.setState({\n            fileData: {\n                ...this.state.fileData,\n                [e.target.id]: e.target.value\n            }\n        });\n    }\n\n    parseFile = async (evt) => {\n        var userId = this.state.userId;\n        evt.preventDefault();\n        const reader = new FileReader();\n\n        try {\n            reader.readAsText(evt.target.files[0]);\n        } catch(e) {\n            console.error(e);\n            this.setState({\n                isUploaded: false,\n                fileData: {}\n            });\n        }\n\n        reader.onload = async (e) => {\n            const text = e.target.result;\n            var jsonData = JSON.parse(text);\n\n            var el = document.getElementById(\"data-upload-input\");\n            var fileName = el.value.split(\"\\\\\")[2];\n\n            var fileMetadata = fileName.split(\"_\");\n            var classDate = fileMetadata[1],\n                classDate = classDate.replace(/(\\d{4})(\\d{2})(\\d{2})/, \"$1-$2-$3\");\n            var classPeriod = fileMetadata[2].replace(\"Per\", \"\").replace(\".json\", \"\").replace(\"_\", \", \");\n\n            this.setState({\n                isUploaded: true,\n                fileData: {\n                    userId: userId,\n                    filename: fileName,\n                    classTopic: \"\",\n                    classDate: classDate,\n                    classPeriod: classPeriod,\n                    jsonData: jsonData\n                }\n            })\n        };\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        var fileData = this.state.fileData;\n\n        this.props.uploadDataset(fileData);\n    };\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n          <div className=\"form-container wide\">\n            <div>\n              <h2 className=\"text-center\">\n                Upload data\n              </h2>\n            </div>\n\n            <form noValidate onSubmit={this.onSubmit}>\n              <input id=\"data-upload-input\" type=\"file\" accept=\"application/JSON\" onChange={(e) => this.parseFile(e)} />\n\n              {this.state.isUploaded ?\n              <div className=\"even-columns-2\">\n                <div className=\"even-column\">\n                  <span className=\"data-upload-label\">Preview</span>\n                  <pre className=\"data-upload-json\">\n                    {JSON.stringify(this.state.fileData.jsonData, null, 2)}\n                  </pre>\n                </div>\n\n                <div className=\"even-column data-upload-metadata\">\n                  <div className=\"data-upload-metadata-fields\">\n                    <div className=\"input-field\">\n                      <label htmlFor=\"topic\">Class Topic</label>\n                      <input\n                        onChange={this.onChange}\n                        value={this.state.fileData.classTopic}\n                        id=\"classTopic\"\n                        type=\"text\"\n                        error={errors.classTopic}\n                        className={classnames(\"\", {\n                          invalid: errors.classTopic\n                        })}\n                      />\n                      <span className=\"input-field-error-text\">{errors.classTopic}</span>\n                    </div>\n\n                    <div className=\"input-field\">\n                      <label htmlFor=\"date\">Date</label>\n                      <input\n                        onChange={this.onChange}\n                        value={this.state.fileData.classDate}\n                        id=\"classDate\"\n                        type=\"date\"\n                      />\n                    </div>\n\n                    <div className=\"input-field\">\n                      <label htmlFor=\"period\">Period(s), comma-separated</label>\n                      <input\n                        onChange={this.onChange}\n                        value={this.state.fileData.classPeriod}\n                        id=\"classPeriod\"\n                        type=\"text\"\n                        error={errors.classPeriod}\n                        className={classnames(\"\", {\n                          invalid: errors.classPeriod\n                        })}\n                      />\n                      <span className=\"input-field-error-text\">{errors.classPeriod}</span>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" className=\"btn btn-submit\">\n                    Upload\n                  </button>\n                </div>\n              </div>\n              : \"\"}\n            </form>\n          </div>\n        )\n    }\n}\n\nUploadDataForm.propTypes = {\n    uploadDataset: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    datasets: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n        errors: state.errors,\n        datasets: state.datasets,\n        admin: state.admin\n    }\n};\n\nexport default connect(\n  mapStateToProps,\n  { uploadDataset }\n)(withRouter(UploadDataForm));\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { editDataset } from \"../../actions/datasetActions\";\nimport formatDate from '../../utils/formatDate';\n\nclass AdminPanelTableRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isJsonDataExpanded: false\n        };\n    }\n\n    deleteDataset(dataset, confirmation) {\n        this.props.deleteDataset(dataset, confirmation);\n    }\n\n    expandJsonData() {\n        this.setState({\n            isJsonDataExpanded: !this.state.isJsonDataExpanded\n        });\n    }\n\n    toggleActive(dataset) {\n        var newDataset = {\n            ...dataset,\n            isActive: !dataset.isActive\n        }\n\n        this.props.editDataset({dataset: newDataset});\n        this.setState({dataset: newDataset});\n    }\n\n    render() {\n        var { isDeletingDataset, dataset } = this.props;\n\n        var parsedJson = JSON.stringify(JSON.parse(dataset.jsonData), null, 2);\n\n        if (isDeletingDataset) {\n            return (\n              <tr>\n                <td>{dataset.classTopic}</td>\n                <td className=\"text-center\">\n                  {formatDate(dataset.classDate)}\n                </td>\n                <td className=\"text-center\">\n                  {dataset.classPeriod}\n                </td>\n                <td className=\"admin-table-actions-confirm\">\n                  <span className=\"admin-table-actions-confirm-text\">\n                    Are you sure?\n                  </span>\n                  <div className=\"admin-table-actions-confirm-buttons\">\n                    <span className=\"btn\" onClick={this.deleteDataset.bind(this, dataset, true)}>\n                      Yes, delete\n                    </span>\n                    <span className=\"btn\" onClick={this.deleteDataset.bind(this, dataset, false)}>\n                      No, cancel\n                    </span>\n                  </div>\n                </td>\n              </tr>\n            )\n        } else {\n            return [\n              <tr key={dataset._id}>\n                <td>\n                  {dataset.classTopic}\n                </td>\n                <td className=\"text-center\">\n                  {formatDate(dataset.classDate)}\n                </td>\n                <td className=\"text-center\">\n                  {dataset.classPeriod.join(\", \")}\n                </td>\n                <td className=\"admin-table-dataset-actions\">\n                  <span className=\"btn\" onClick={this.expandJsonData.bind(this)}>\n                    {this.state.isJsonDataExpanded ? \"Hide Raw JSON\" : \"View Raw JSON\"}\n                  </span>\n                  <span className=\"btn\" onClick={this.toggleActive.bind(this, dataset)}>\n                    {dataset.isActive ? \"Mark inactive\" : \"Mark active\"}\n                  </span>\n                  <span className=\"btn\" onClick={this.deleteDataset.bind(this, dataset, false)}>\n                    Delete\n                  </span>\n                </td>\n              </tr>\n            , this.state.isJsonDataExpanded &&\n              <tr key={`${dataset._id}-data`}>\n                <td colSpan=\"4\">\n                  <pre className=\"admin-table-json\">\n                    {parsedJson}\n                  </pre>\n                </td>\n              </tr>\n            ]\n        }\n    }\n}\n\nAdminPanelTableRow.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    editDataset: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { editDataset }\n)(withRouter(AdminPanelTableRow));\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { resetUserPassword } from \"../../actions/adminActions\";\nimport classnames from \"classnames\";\n\nclass ResetPasswordForm extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n          userId: props.userId,\n          password: \"\",\n          password2: \"\",\n          errors: {}\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.errors) {\n            return ({\n                errors: nextProps.errors\n            });\n        }\n\n        return null;\n    }\n\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.admin.passwordResetSuccessful) {\n            this.dismountForm({\n                message: `Password reset successfully: ${this.state.password}`\n            });\n        }\n\n        return true;\n    }\n\n    dismountForm(options) {\n        this.props.dismountForm(options);\n    }\n\n    onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n      e.preventDefault();\n      \n      const userData = {\n          userId: this.state.userId,\n          password: this.state.password,\n          password2: this.state.password2\n      };\n\n      this.props.resetUserPassword(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n          <div className=\"form-container\">\n            <h2 className=\"text-center\">\n              Reset Password\n            </h2>\n\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <span className=\"input-field-error-text\">{errors.password2}</span>\n              </div>\n              <button type=\"submit\" className=\"btn btn-submit\">\n                Submit\n              </button>\n            </form>\n          </div>\n        );\n    }\n}\n\nResetPasswordForm.propTypes = {\n  resetUserPassword: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  admin: PropTypes.object.isRequired,\n  datasets: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  admin: state.admin,\n  datasets: state.datasets\n});\n\nexport default connect(\n  mapStateToProps,\n  { resetUserPassword }\n)(withRouter(ResetPasswordForm));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { showUserDetails } from \"../../actions/adminActions\";\nimport { listDatasets, deleteDatasetById, clearValidState } from \"../../actions/datasetActions\";\nimport UserTypes from '../../fixtures/user_types';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport UploadDataForm from './UploadDataForm';\nimport UserDatasetTableRow from './UserDatasetTableRow';\nimport ResetPasswordForm from './ResetPasswordForm';\n\nclass UserDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n\n        var userId = props.match.params.userId;\n\n        this.state = {\n            isUploadingData: false,\n            isResettingPassword: false,\n            userId: userId,\n            datasets: [],\n            datasetToDelete: {},\n            isLoaded: false,\n            showMessage: false,\n            message: \"\",\n            areDatasetsLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.showUserDetails(this.state.userId);\n        if (!this.state.areDatasetsLoaded) {\n            this.props.listDatasets(this.state.userId).then((response) => {\n                this.setState({\n                    areDatasetsLoaded: true\n                });\n            });\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.admin.user) {\n            return ({\n                user: nextProps.admin.user\n            });\n        }\n\n        return null;\n    }\n\n    // TODO: put this into a util function?\n    userTypeAsWords(type) {\n        return UserTypes.filter(obj => obj.value === type)[0] &&\n                UserTypes.filter(obj => obj.value === type)[0].label;\n    }\n\n    toggleUploadData() {\n        this.setState(prevState => ({\n            isUploadingData: !prevState.isUploadingData\n        }));\n    }\n\n    toggleResetPassword() {\n        this.setState(prevState => ({\n            isResettingPassword: !prevState.isResettingPassword\n        }));\n    }\n\n    deleteDataset(dataset, confirmation = false) {\n        if (confirmation) {\n            this.props.deleteDatasetById(dataset);\n            this.setState({\n                datasetToDelete: {}\n            });\n        }\n\n        if (dataset._id === this.state.datasetToDelete._id && !confirmation) { // remove confirmation message\n            this.setState({\n                datasetToDelete: {}\n            });\n        } else if (Object.entries(this.state.datasetToDelete).length === 0) { // set confirmation message\n            this.setState({\n                datasetToDelete: dataset\n            });\n        }\n    }\n\n    dismountForm(options) {\n        var that = this;\n\n        if (options && options.message) {\n            this.setState({\n                showMessage: true,\n                message: options.message\n            });\n\n            setTimeout(function() {\n                that.setState({\n                    showMessage: false,\n                    message: \"\"\n                });\n            }, 3000);\n        } else {\n            this.props.clearValidState();\n        }\n\n        this.setState({\n            isUploadingData: false,\n            isResettingPassword: false\n        });\n    }\n\n    render() {\n        var user = this.state.user || {};\n        var datasets = this.props.datasets.datasets || [];\n\n        return (\n          <div className=\"admin-user\">\n            <div className=\"admin-header\">\n              <Link to={{\n                pathname: `/admin/user/${this.state.userId}/preview/dashboard`\n              }}>\n                <span className=\"btn\">\n                  Preview Teacher View\n                </span>\n              </Link>\n              <span\n                className={this.state.isResettingPassword ? \"hidden\" : \"btn\"}\n                onClick={this.toggleUploadData.bind(this)}>\n                {this.state.isUploadingData ? \"Cancel\" : \"Upload data\"}\n              </span>\n              <span\n                className={this.state.isUploadingData ? \"hidden\" : \"btn\"}\n                onClick={this.toggleResetPassword.bind(this)}>\n                {this.state.isResettingPassword ? \"Cancel\" : \"Reset password\"}\n              </span>\n            </div>\n\n            {this.state.isUploadingData ?\n              <UploadDataForm\n                userId={user._id}\n                dismountForm={this.dismountForm.bind(this)} />\n            : \"\"}\n\n            {this.state.isResettingPassword ?\n              <ResetPasswordForm\n                userId={user._id}\n                dismountForm={this.dismountForm.bind(this)} />\n            : \"\"}\n\n            {this.state.showMessage ?\n            <div className=\"admin-confirmation-message\">\n              <span className=\"admin-confirmation-message-text\">\n                {this.state.message}\n              </span>\n            </div>\n            : \"\"}\n\n            <div className=\"admin-user-info\">\n              <span className=\"admin-user-info-name\">\n                {user.name}\n              </span>\n              <span className=\"admin-user-info-email\">\n                {user.email}\n              </span>\n              <span className=\"admin-user-info-type\">\n                {this.userTypeAsWords(user.userType)}\n              </span>\n            </div>\n\n            <table className=\"admin-table\">\n              <thead>\n                <tr>\n                  <th>Class Topic</th>\n                  <th>Date</th>\n                  <th>Period(s)</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {datasets.length === 0 ?\n                <tr>\n                  <td colSpan=\"4\" className=\"text-center\">\n                    This user doesn't have any datasets.\n                  </td>\n                </tr> :\n                datasets.map((dataset, index, array) => {\n                  var isDeletingDataset = dataset._id && (this.state.datasetToDelete._id === dataset._id);\n\n                  return (\n                    <UserDatasetTableRow\n                      key={index}\n                      dataset={dataset}\n                      isDeletingDataset={isDeletingDataset}\n                      deleteDataset={this.deleteDataset.bind(this)} />\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )\n    }\n}\n\nUserDetailsPage.propTypes = {\n    auth: PropTypes.object.isRequired,\n    showUserDetails: PropTypes.func.isRequired,\n    listDatasets: PropTypes.func.isRequired,\n    datasets: PropTypes.object.isRequired,\n    admin: PropTypes.object.isRequired,\n    deleteDatasetById: PropTypes.func.isRequired,\n    clearValidState: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n        datasets: state.datasets,\n        admin: state.admin\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  { showUserDetails, listDatasets, deleteDatasetById, clearValidState }\n)(UserDetailsPage));\n","import React, { Component } from \"react\";\n\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Navbar from \"./layout/Navbar\";\n\nimport Landing from \"./Landing\";\nimport Register from \"./auth/Register\";\nimport Login from \"./auth/Login\";\nimport PrivateRoute from \"./private-route/PrivateRoute\";\n\nimport AdminViz from './visualization/AdminViz';\nimport UserViz from './visualization/UserViz';\n\nimport AdminPanel from './admin/AdminPanel';\nimport UserDetailsPage from './admin/UserDetailsPage';\n\nclass App extends Component {\n    render() {\n        return (\n          <div>\n            <Navbar\n              datasets={this.props.datasets}/>\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <PrivateRoute\n              exact\n              path=\"/admin\"\n              component={(props) => (\n                <AdminPanel {...props} />\n              )}\n            />\n\n            <PrivateRoute\n              exact\n              path='/admin/user/:userId'\n              component={(props) => (\n                <UserDetailsPage {...props} />\n              )}\n            />\n\n            <PrivateRoute\n              path='/admin/user/:userId/preview'\n              component={(props) => (\n                <AdminViz {...props} />\n              )}\n            />\n\n            <PrivateRoute\n              path='/visualization'\n              component={(props) => (\n                <UserViz {...props} />\n              )}\n            />\n          </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\n// NOTE: Do not bind admin.datasets to this method.\n// It will cause componentDidMount to fire infinitely in all subcomponents which use it.\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth,\n    }\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {}\n)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logoutUser());\n\n        // Redirect to login\n        window.location.href = \"./login\";\n    }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* Routers can only have one child element */}\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}